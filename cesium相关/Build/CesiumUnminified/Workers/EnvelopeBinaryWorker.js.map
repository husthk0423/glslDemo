{"version":3,"file":"EnvelopeBinaryWorker.js","sources":["../../../Source/WorkersES6/EnvelopeBinaryWorker.js"],"sourcesContent":["/**\r\n * Cesium - https://github.com/AnalyticalGraphicsInc/cesium\r\n *\r\n * Copyright 2011-2017 Cesium Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * Columbus View (Pat. Pend.)\r\n *\r\n * Portions licensed separately.\r\n * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.\r\n */\r\n\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\nimport Resource from '../Core/Resource.js';\r\nimport Cartesian3 from '../Core/Cartesian3.js';\r\nimport HouseDrawer from './HouseDrawer.js';\r\nimport parseBinaryData from './ParseBinaryData';\r\nimport getPrimitiveData from './GetPrimitiveData.js';\r\nimport Cache from './Cache.js';\r\nimport PolygonBuffer from './PolygonBuffer.js';\r\nimport defer from \"../Core/defer.js\";\r\n\r\nlet styleFun = undefined;\r\nlet tileSize = 512;\r\nlet return_type = '';\r\nlet options = {};\r\n\r\nlet serverInfo = {};\r\nlet layerFieldMap = {};\r\n\r\n//默认当前屏幕最多10万个房屋缓存\r\nlet cache = new Cache(100000);\r\n\r\n    function init(parameters){\r\n        let deferred = defer();\r\n        styleFun = new Function(\"render\",\"level\", parameters.styleStr);\r\n        tileSize = parameters.tileSize;\r\n        return_type = parameters.return_type;\r\n        options = parameters;\r\n\r\n        serverInfo = parameters.serverInfo;\r\n        layerFieldMap = parameters.layerFieldMap;\r\n        deferred.resolve({});\r\n        return deferred.promise;\r\n    }\r\n\r\n    /* global require */\r\n    function createGeometry(parameters, transferableObjects) {\r\n            if(parameters.init ==true){\r\n                init(parameters);\r\n                return;\r\n            }\r\n\r\n            var url = parameters.url;\r\n            var resource = new Resource({url:url});\r\n            resource.request.throttle = false;\r\n            resource.request.throttleByServer = true;\r\n            resource.request.type = 1;\r\n\r\n            var jsonPromise = resource.fetchArrayBuffer();\r\n\r\n            if(!jsonPromise){\r\n                return true;\r\n            }\r\n\r\n\r\n            let deferred = defer();\r\n            jsonPromise.then(function(data) {\r\n                if(!data){\r\n                    deferred.resolve({});\r\n                    return;\r\n                }\r\n                let layers =  parseBinaryData(data,layerFieldMap,serverInfo);\r\n                let featureMap =  parseData(layers,parameters);\r\n                //将瓦片内坐标转为地心坐标\r\n                featureMapToLonLat(featureMap,parameters);\r\n                if(parameters.bufferDistance !=0){\r\n                    PolygonBuffer.buffer(featureMap,parameters.bufferDistance*0.001);\r\n                }\r\n\r\n                toCartesian3(featureMap);\r\n                let primitiveData = getPrimitiveData(featureMap, parameters.level, options, transferableObjects);\r\n                deferred.resolve(primitiveData);\r\n            },function (e){\r\n                deferred.reject(e);\r\n            });\r\n            return deferred.promise;\r\n        }\r\n\r\n\r\n        function parseData(data,parameters){\r\n            if(data){\r\n                decodeData(data,parameters.needDecode);\r\n                //设置样式\r\n                let featureMap = {};\r\n                let drawer = new HouseDrawer([data], parameters.level, featureMap,parameters.controlVector,\r\n                    parameters.highLightVector,parameters.filterLayerId);\r\n                styleFun.call({}, drawer, parameters.level);\r\n                formatGeometrys(featureMap);\r\n                return featureMap;\r\n            }\r\n            return {};\r\n        }\r\n\r\n        /**\r\n         *  解码数据，包括点坐标偏移，正方形F的解码等\r\n         * @param data\r\n         */\r\n        function decodeData(data,needDecode){\r\n            for(let layername in data){\r\n                let features = data[layername].features;\r\n                if(!features){\r\n                    features = data[layername].datas;\r\n                }\r\n                for(let i = 0;i<features.length;i++){\r\n                    recursiveDecode(features[i][2],needDecode);\r\n                }\r\n            }\r\n        }\r\n\r\n        function recursiveDecode(components,needDecode){\r\n            if(components[0] == 'F'){\r\n                components[0] = formatF();\r\n                return;\r\n            }\r\n\r\n            if (Array.isArray(components[0])) {\r\n                let len = components.length;\r\n                for (let i = 0; i < len; i++) {\r\n                    let component = components[i];\r\n                    recursiveDecode(component,needDecode);\r\n                }\r\n            } else {\r\n                if(needDecode){\r\n                    recoveryData(components);\r\n                }\r\n            }\r\n        }\r\n\r\n        function recoveryData(components){\r\n            let prevPoint = [components[0],components[1]];\r\n            for(let j =2;j<components.length;j++){\r\n                let x = prevPoint[0]+components[j];\r\n                let y = prevPoint[1]+components[j+1];\r\n                components[j] = x;\r\n                components[j+1] = y;\r\n                prevPoint = [x,y];\r\n                j++;\r\n            }\r\n        }\r\n\r\n        function formatF(){\r\n            return [-tileSize*0.05,-tileSize*0.05,tileSize*1.05,-tileSize*0.05,\r\n                tileSize*1.05,tileSize*1.05,-tileSize*0.05,tileSize*1.05];\r\n        }\r\n\r\n        function getMaxYMinY(polygons){\r\n            let ymin=1000;\r\n            let ymax=0;\r\n            for(let i =0;i<polygons.length;i++){\r\n                let points = polygons[i];\r\n                for(let j =0;j<points.length-1;j++){\r\n                    let y = Math.round(points[j+1]);\r\n                    if(y<ymin){\r\n                        ymin = y;\r\n                    }\r\n                    if(y>ymax){\r\n                        ymax = y;\r\n                    }\r\n                    j++;\r\n                }\r\n            }\r\n\r\n            return {ymax:ymax,ymin:ymin};\r\n        }\r\n\r\n\r\n        /**\r\n         *  解析多面\r\n         * @param featureMap\r\n         */\r\n        function formatGeometrys(featureMap){\r\n            for(let key in featureMap){\r\n                let features = featureMap[key];\r\n                for(let i = 0;i<features.length;i++){\r\n                    let feature = features[i];\r\n                    let geometrys = [];\r\n                    recursiveFormat(geometrys,feature.data);\r\n                    delete feature.data;\r\n                    feature.geometrys = geometrys;\r\n\r\n\r\n                    let height = 0;\r\n                    if(options.hasOwnProperty('heightProperty')){\r\n                        let heightProperty = options.heightProperty;\r\n                        height = feature.properties[heightProperty];\r\n                        if(options.hasOwnProperty('heightScale')){\r\n                            height = height * parseFloat(options.heightScale);\r\n                        }\r\n                    }\r\n                    //不考虑地形，房子的本身高度\r\n                    feature.height = height;\r\n                    feature.totalHeight = height;\r\n                }\r\n            }\r\n        }\r\n\r\n        function recursiveFormat(geometrys,components){\r\n            if (Array.isArray(components[0])) {\r\n                let len = components.length;\r\n                for (let i = 0; i < len; i++) {\r\n                    let component = components[i];\r\n                    recursiveFormat(geometrys,component);\r\n                }\r\n            } else {\r\n                geometrys.push(components);\r\n            }\r\n        }\r\n\r\n        function featureMapToLonLat(featureMap,parameters){\r\n            for(let key in featureMap){\r\n                let features = featureMap[key];\r\n                for(let i = 0;i<features.length;i++){\r\n                    let feature = features[i];\r\n                    let polygons = [];\r\n                    for(let j =0;j<feature.geometrys.length;j++){\r\n                        let geometry = feature.geometrys[j];\r\n                        let positions = geometryToLonLat(geometry,parameters);\r\n                        polygons.push(positions);\r\n                    }\r\n                    feature.geometrys = polygons;\r\n                }\r\n            }\r\n        }\r\n\r\n        function geometryToLonLat(geometry,parameters){\r\n            let rectangle = parameters.rectangle ;\r\n            var positions = [];\r\n            for (var i = 0; i < geometry.length; i++) {\r\n                var pt = formatToDegrees(geometry[i],geometry[i+1],rectangle);\r\n                positions.push(pt[0]);\r\n                positions.push(pt[1]);\r\n                i++;\r\n            }\r\n            return positions;\r\n        }\r\n\r\n        function formatToDegrees(x,y,rectangle){\r\n            var lon = toDegrees(rectangle.west + rectangle.width/ tileSize* x);\r\n            var lat = toDegrees(rectangle.north - rectangle.height/ tileSize* y);\r\n            lon = Number(lon.toFixed(6));\r\n            lat = Number(lat.toFixed(6));\r\n            return [lon,lat];\r\n        }\r\n\r\n        function toDegrees (radians) {\r\n            return radians * 180.0 / Math.PI;\r\n        };\r\n\r\n        function toCartesian3(featureMap){\r\n            for(let key in featureMap){\r\n                let features = featureMap[key];\r\n                features.map((item) => {\r\n                    let polygons = [];\r\n                    for(let i =0;i<item.geometrys.length;i++){\r\n                        let geometry = item.geometrys[i];\r\n                        let positions = [];\r\n                        for(let j = 0;j<geometry.length;j++){\r\n                            let lon = geometry[j];\r\n                            let lat = geometry[j+1];\r\n                            let cartesian3 =Cartesian3.fromDegrees(lon, lat);\r\n                            positions.push(cartesian3);\r\n                            j++;\r\n                        }\r\n                        polygons.push(positions);\r\n                    }\r\n                    item.polygons = polygons;\r\n                    delete item.geometrys;\r\n                })\r\n            }\r\n        }\r\n\r\n    var result = createTaskProcessorWorker(createGeometry);\r\n    export default result;"],"names":["defer","Resource","parseBinaryData","getPrimitiveData","Cartesian3"],"mappings":"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"}