{"version":3,"file":"Cesium3DtilesWorker.js","sources":["../../../Source/util/IndexDBTool.js","../../../Source/WorkersES6/Cesium3DtilesWorker.js"],"sourcesContent":["import defer from \"../Core/defer.js\";\r\nclass IndexDBTool {\r\n    /**\r\n     * 根据数据库名创建数据库,创建表和索引\r\n     * @param tName 表名\r\n     * @param pKey 表的主键字段名\r\n     * @param autoIncrement 是否主键自增长\r\n     * @param indexName 索引名称\r\n     * @param indexFiled 索引指定的字段名\r\n     * @returns {Promise | Promise<unknown>}\r\n     */\r\n    static createDB(tName,pKey,autoIncrement,indexName,indexFiled){\r\n        let deferred = defer();\r\n        let request = indexedDB.open(tName,1);\r\n        request.onerror = function(){\r\n            console.log(tName+\"数据库创建失败或者异常~\");\r\n            deferred.reject();\r\n        };\r\n        request.onsuccess = function(e){\r\n            console.log(tName+\"数据库连接成功~\");\r\n            let db = e.target.result;\r\n            deferred.resolve(db);\r\n        };\r\n        request.onupgradeneeded = function(e){\r\n            let db = e.target.result;\r\n            //创建表和索引\r\n            let objectStore = db.createObjectStore(tName,{keyPath:pKey,autoIncrement: autoIncrement});\r\n            objectStore.createIndex(indexName, indexFiled, { unique: true });\r\n            // deferred.resolve(db);\r\n        };\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     *  创建表和索引\r\n     * @param db 数据库实例\r\n     * @param tName 表名\r\n     * @param pKey 表的主键字段名\r\n     * @param autoIncrement 是否主键自增长\r\n     * @param indexName 索引名称\r\n     * @param indexFiled 索引指定的字段名\r\n     */\r\n    // static createTable(db,tName,pKey,autoIncrement,indexName,indexFiled){\r\n    //     let objectStore = db.createObjectStore(tName,{keyPath:pKey,autoIncrement: autoIncrement});\r\n    //     objectStore.createIndex(indexName, indexFiled, { unique: true });\r\n    //     return objectStore;\r\n    // }\r\n\r\n    /**\r\n     * 根据查询的主键查询数据\r\n     * @param db 数据库实例\r\n     * @param tName 表名\r\n     * @param key 主键\r\n     *  @returns {Promise | Promise<unknown>}\r\n     */\r\n    static getByPkey(db,tName,key){\r\n        let deferred = defer();\r\n        let transaction = db.transaction([tName]);\r\n        let objectStore = transaction.objectStore(tName);\r\n        let request = objectStore.get(key);\r\n        request.onerror = function(event) {\r\n            deferred.resolve(null);\r\n            // console.log(indexDbname + '_'+key + '数据查询报错');\r\n        };\r\n\r\n        request.onsuccess = function( event) {\r\n            if (request.result) {\r\n                deferred.resolve(request.result);\r\n            } else {\r\n                deferred.resolve(null);\r\n                // console.log(indexDbname + '_'+key + '数据查询为空！');\r\n            }\r\n        };\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * 根据key更新数据\r\n     * @param db 数据库实例\r\n     * @param tName 表名\r\n     * @param key 主键\r\n     * @param data\r\n     * @returns {Promise | Promise<unknown>}\r\n     */\r\n    static setByKey(db,tName,key,data){\r\n        let deferred = defer();\r\n        let transaction = db.transaction([tName],'readwrite');\r\n        let objectStore = transaction.objectStore(tName);\r\n        let request = objectStore.put({ key: key,data: data});\r\n\r\n        request.onsuccess = function (event) {\r\n            // console.log(indexDbName+'_'+key+'数据入库成功');\r\n            deferred.resolve(true);\r\n        };\r\n\r\n        request.onerror = function (event) {\r\n            // console.log(indexDbName+'_'+key + '数据入库失败');\r\n            deferred.reject();\r\n        };\r\n        return deferred.promise;\r\n    }\r\n}\r\nexport default IndexDBTool;\r\n","/**\r\n * 请求3dtiles瓦片，并将瓦片存到indexdb中\r\n */\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\nimport Resource from '../Core/Resource.js';\r\nimport IndexDBTool from '../util/IndexDBTool';\r\nimport defer from \"../Core/defer.js\";\r\n\r\nlet isDbError = true;\r\nlet keyMap = {};\r\nlet db = null;\r\nlet tName = '';\r\n\r\n//清理缓存后，重新获取indexdb的promise对象\r\nlet catchPromise = null;\r\n//清理缓存后，出现indexdb异常的次数\r\nlet catchCount = 0;\r\n\r\n    /* global require */\r\n  function request3dTiles(parameters, transferableObjects) {\r\n        //初始化\r\n        if(parameters.init == true){\r\n            tName = parameters.tName;\r\n            let defer1 = defer();\r\n            let useIndexDB = parameters.useIndexDB;\r\n            if(!useIndexDB){\r\n                isDbError = true;\r\n                defer1.resolve();\r\n                return defer1.promise;\r\n            }\r\n            let promise = IndexDBTool.createDB(tName,'key',false,'keyIndex','key');\r\n            promise.then(function(dbItem){\r\n              db = dbItem;\r\n              keyMap = {};\r\n              isDbError = false;\r\n              defer1.resolve();\r\n            },function(e){\r\n              isDbError = true;\r\n              defer1.resolve();\r\n            });\r\n            return defer1.promise;\r\n        }\r\n\r\n        if(parameters.type == '3dtile'){\r\n            //初次请求url\r\n            let url = parameters.url;\r\n            let resource = new Resource({url:url});\r\n            resource.request.throttle = false;\r\n            resource.request.throttleByServer = parameters.throttleByServer;\r\n            resource.request.type = 2;\r\n            resource.request.priorityFunction = createPriorityFunction(parameters.priority);\r\n\r\n            return getTileData(resource,'arrayBuffer',transferableObjects);\r\n        }\r\n\r\n      if(parameters.type == 'image'){\r\n          //初次请求url\r\n          let url = parameters.url;\r\n          let resource = new Resource({url:url});\r\n          resource.request.throttle = false;\r\n          resource.request.throttleByServer = true;\r\n          resource.request.type = 2;\r\n          return getTileData(resource,'image',transferableObjects);\r\n      }\r\n    }\r\n\r\n    function createPriorityFunction(priority) {\r\n        return function () {\r\n            return priority;\r\n        };\r\n    }\r\n\r\n    function getTileData(resource,type,transferableObjects){\r\n        let defer1 = defer();\r\n\r\n        if(isDbError){\r\n            return fetchArrayBufferAndSaveIndexDB(resource,defer1,type,transferableObjects).promise;\r\n        }\r\n\r\n        if(keyMap[resource._url]){// indexdb中没找到\r\n            return fetchArrayBufferAndSaveIndexDB(resource,defer1,type,transferableObjects).promise;\r\n        }\r\n\r\n        let defer2 = defer();\r\n        try{\r\n            defer2.promise = IndexDBTool.getByPkey(db,tName,resource._url);\r\n        }catch (e) {\r\n            let promise1 = catchIndexError();\r\n            promise1.then(function (){\r\n                catchCount--;\r\n                if(catchCount == 0){\r\n                    catchPromise = null;\r\n                }\r\n                defer2.promise = IndexDBTool.getByPkey(db,tName,resource._url);\r\n            });\r\n        }\r\n\r\n        defer2.promise.then(function(result){\r\n            if(result){\r\n                //返回从indexdb中取到的数据\r\n                transferableObjects.push(result.data);\r\n                // console.log('找到瓦片');\r\n                defer1.resolve(result.data);\r\n            }else{\r\n                fetchArrayBufferAndSaveIndexDB(resource,defer1,type,transferableObjects);\r\n            }\r\n        });\r\n\r\n        return defer1.promise;\r\n    }\r\n\r\n\r\n    function fetchArrayBufferAndSaveIndexDB(resource,defer1,type,transferableObjects){\r\n        let promise1;\r\n        if(type == 'image'){\r\n            promise1 = resource.fetchImage({\r\n                skipColorSpaceConversion: true,\r\n                preferImageBitmap: true,\r\n                inWorker:true\r\n            });\r\n        }\r\n\r\n        if(type == 'arrayBuffer'){\r\n            promise1 = resource.fetchArrayBuffer();\r\n        }\r\n\r\n        if (!promise1) {\r\n            defer1.resolve(null);\r\n            keyMap[resource._url] = true;\r\n            // console.log('重新请求： '+resource._url);\r\n            return defer1;\r\n        }\r\n\r\n        // console.log('请求==========： '+resource._url);\r\n        promise1.then(function(result1){\r\n            if(isDbError){\r\n                delete keyMap[resource._url];\r\n                //返回从网络请求到的数据\r\n                transferableObjects.push(result1);\r\n                defer1.resolve(result1);\r\n                return;\r\n            }\r\n\r\n            // let promise2 = IndexDBTool.setByKey(db,tName,resource._url,result1);\r\n\r\n            let defer2 = defer();\r\n            try{\r\n                defer2.promise = IndexDBTool.setByKey(db,tName,resource._url,result1);\r\n            }catch (e) {\r\n                let promise1 = catchIndexError();\r\n                promise1.then(function (){\r\n                    catchCount--;\r\n                    if(catchCount == 0){\r\n                        catchPromise = null;\r\n                    }\r\n                    defer2.promise = IndexDBTool.setByKey(db,tName,resource._url,result1);\r\n                });\r\n            }\r\n\r\n            defer2.promise.finally(function(){\r\n                delete keyMap[resource._url];\r\n                //返回从网络请求到的数据\r\n                transferableObjects.push(result1);\r\n                defer1.resolve(result1);\r\n            });\r\n        },function(e){\r\n            defer1.reject(e);\r\n        });\r\n\r\n        return defer1;\r\n    }\r\n\r\n\r\n    function catchIndexError(){\r\n        catchCount++;\r\n        if (catchPromise){\r\n            return catchPromise;\r\n        }\r\n        catchPromise = IndexDBTool.createDB(tName,'key',false,'keyIndex','key');\r\n        catchPromise.then(function(dbItem){\r\n            db = dbItem;\r\n            keyMap = {};\r\n        });\r\n        return catchPromise;\r\n    }\r\n\r\n    var result = createTaskProcessorWorker(request3dTiles);\r\n    export default result;"],"names":["defer","IndexDBTool","Resource"],"mappings":"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"}