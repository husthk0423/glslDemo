{"version":3,"file":"VarintReader.js","sources":["../../../Source/WorkersES6/VarintReader.js"],"sourcesContent":["import uncompress from './snappyJs';\r\nimport CodeTool from './CodeTool';\r\nimport LayerContentModel from './LayerContentModel';\r\nimport GisTool from './GisTools';\r\n\r\n/**\r\n * 瓦片数据解析\r\n */\r\nclass VarintReader {\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param vectorVarintBuffer {Buffer} vector或layer格式buffer\r\n     * @param headerLength {number} 数据头长度\r\n     * @param proSizeObj {Object} 要素属性数量\r\n     */\r\n    constructor(vectorVarintBuffer, headerLength, proSizeObj) {\r\n        //缩进长度\r\n        this.headerLength = headerLength;\r\n        //要素属性数量\r\n        this.proSizeObj = proSizeObj;\r\n        //数字类型的byte长度\r\n        this.intLength = 4;\r\n        //瓦片数据的标识\r\n        this.vectorName = \"vector\";\r\n        //空间类型的key\r\n        this.gTypeKey = \"gType\";\r\n        //字符串编码\r\n        this.encoding = \"utf8\";\r\n        //要素属性间隔\r\n        this.featureSpace = \"#@\";\r\n        //瓦片buffer\r\n        this.vectorVarintBuffer = vectorVarintBuffer;\r\n        //图层buffer\r\n        this.layerMap = new Object();\r\n        //瓦片头带有的属性\r\n        this.vectorHeaderProMap = new Object();\r\n        //图层头带的属性\r\n        this.layerHeaderProMap = new Object();\r\n         this.layerHeaderProBuffer = new Object();\r\n        //图层的空间数据类型\r\n        this.geometyTypeMap = new Object();\r\n        //图层要素\r\n        this.featureMap = new Object();\r\n        this.featureArrayMap = new Object();\r\n        //图层坐标索引buffer\r\n        this.offsetBufferMap = new Object();\r\n        //图层坐标索引数组\r\n        this.offsetArrayMap = new Object();\r\n        //图层坐标\r\n        this.varintMap = new Object();\r\n\r\n        this._parseVector(vectorVarintBuffer);\r\n    }\r\n\r\n    /**\r\n     * 获取vector的头属性\r\n     * @returns {Object}\r\n     */\r\n    getVectorHeaderProMap() {\r\n        return this.vectorHeaderProMap;\r\n    }\r\n\r\n    /**\r\n     * 获取layer的头属性\r\n     * @returns {Object}\r\n     */\r\n    getLayerHeaderProMap() {\r\n        return this.layerHeaderProMap;\r\n    }\r\n\r\n    /**\r\n     * 获得图层varint编码buffer\r\n     * @param layerName {string}\r\n     * @returns {Buffer}\r\n     */\r\n    getLayerBuffer(layerName) {\r\n        return this.layerMap[layerName];\r\n    }\r\n\r\n    /**\r\n     * 通过要素过滤对应的buffer\r\n     * @param layerName {string}图层名称\r\n     * @param featureIndexArray {[number]}选择的要素数组下标\r\n     * @returns {LayerContentModel}\r\n     */\r\n    getLayerProByFilter(layerName, featureIndexArray) {\r\n        let coordinateBufferArray = [];\r\n        let offsetArray = this.offsetArrayMap[layerName];\r\n        let featureArray = this._lazyParseFeature(layerName);\r\n        let filterArray = [];\r\n        let idx;\r\n        let offset;\r\n        let length;\r\n        let proSize = this.proSizeObj[layerName];\r\n        for (let i = 0; i < featureIndexArray.length; i++) {\r\n            idx = featureIndexArray[i];\r\n            //挑选要素\r\n            filterArray.push(...featureArray[idx]);\r\n            //挑选要素对应的坐标索引\r\n            offset = offsetArray[idx*2];\r\n            length = offsetArray[idx*2 + 1];\r\n            coordinateBufferArray.push(this.varintMap[layerName].slice(offset, offset + length));\r\n        }\r\n\r\n        let model = new LayerContentModel();\r\n        model.setLayerHeaderProBuffer(this.layerHeaderProBuffer[layerName]);\r\n        model.setFeatureArray(filterArray);\r\n        model.setCoordinateBufferArray(coordinateBufferArray);\r\n\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * 获得图层名称数组\r\n     * @returns {[图层名称1， 图层名称2， ...]}\r\n     */\r\n    getAllLayerNames() {\r\n        let layerNames = [];\r\n        for (let value in this.layerMap) {\r\n            layerNames.push(value);\r\n        }\r\n        return layerNames;\r\n    }\r\n\r\n\r\n    /**\r\n     * 图层的空间类型\r\n     * @param {string} layerName\r\n     * @returns {any}\r\n     */\r\n    getGeometryType(layerName) {\r\n        return this.geometyTypeMap[layerName];\r\n    }\r\n\r\n    /**\r\n     * 获取指定的图层要素属性\r\n     * @param layerName {string} 图层名称\r\n     * @param featureIndex {number}要素数组的下标\r\n     * @returns {*|string[]}\r\n     */\r\n    getLayerProByIndex(layerName, featureIndex) {\r\n        let featureArray = this._lazyParseFeature(layerName);\r\n        return featureArray[featureIndex]\r\n    }\r\n\r\n    /**\r\n     * 图层的属性信息\r\n     * @param layerName {string}图层名称\r\n     * @returns {[属性数组]}\r\n     */\r\n    getLayerPro(layerName) {\r\n        return this._lazyParseFeature(layerName);\r\n    }\r\n\r\n    /**\r\n     * 获得图层所有坐标数组的偏移量数组\r\n     * @param layerName {string}图层名称\r\n     * @returns {[number]} [属性1字节开始位置，属性1坐标字节长度 ,属性2字节开始位置，属性2坐标字节长度 ,....]\r\n     */\r\n    getOffsetArray(layerName) {\r\n        return this.offsetArrayMap[layerName];\r\n    }\r\n\r\n    /**\r\n     * 获得图层某个属性的坐标偏移量数组\r\n     * @param layerName {string}图层名称\r\n     * @param featureIndex {number} 要素所在数组的位置\r\n     * @returns {[属性字节开始位置，属性坐标字节长度]}\r\n     */\r\n    getOffsetByIndex(layerName, featureIndex) {\r\n        let all = this.offsetArrayMap[layerName];\r\n\r\n        let arr = [];\r\n        arr.push(all[featureIndex * 2]);\r\n        arr.push(all[featureIndex * 2 + 1]);\r\n\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 获得图层的所有坐标字节\r\n     * @param layerName {string}图层名称\r\n     * @returns {Buffer}\r\n     */\r\n    getLayerCoordinate(layerName) {\r\n        return this.varintMap[layerName];\r\n    }\r\n\r\n    /**\r\n     * 获得要素\r\n     * @param layerName {string}图层名称\r\n     * @returns {[object]} [要素属性数组， 坐标偏移量， 坐标varint数组]\r\n     */\r\n    getLayerFeature(layerName) {\r\n        return [this.featureMap[layerName], this.offsetArrayMap[layerName], this.varintMap[layerName]];\r\n    }\r\n\r\n    /**\r\n     * 图层所有数字坐标\r\n     * @param layerName {string} 图层名称\r\n     * @param precision {number} 数字精度\r\n     * @returns {[[number]]} [[要素1坐标],[要素2坐标],...]\r\n     */\r\n    getAllCoordinates(layerName, precision) {\r\n        let ofs = this.offsetArrayMap[layerName];\r\n        let buffer = this.varintMap[layerName];\r\n        let coorArray = [];\r\n        let offset;\r\n        let length;\r\n        let bf;\r\n        for (let i = 0; i < ofs.length / 2; i++) {\r\n            offset = ofs[i * 2];\r\n            length = ofs[i * 2 + 1];\r\n            bf = buffer.slice(offset, offset + length);\r\n            coorArray.push(this._bufferToDoubleArray(bf, precision));\r\n        }\r\n        return coorArray;\r\n    }\r\n\r\n    /**\r\n     * 图层某个要素的数字坐标\r\n     * @param layerName {string}图层名称\r\n     * @param proIndex {[number]} 属性所在数组的位置\r\n     * @param precision {number} 数字精度\r\n     * @returns {[number]} 要素坐标\r\n     */\r\n    getCoordinatesByIndex(layerName, proIndex, precision) {\r\n        let ofs = this.getOffsetByIndex(layerName, proIndex);\r\n        let buffer = this.varintMap[layerName];\r\n        let offset = ofs[0];\r\n        let length = ofs[1];\r\n        let bf = buffer.slice(offset, offset + length);\r\n        return this._bufferToDoubleArray(bf, precision);\r\n    }\r\n\r\n    /**\r\n     * 解析瓦片数据\r\n     * @param vectorVarintBuffer {Buffer} varint编码Buffer\r\n     * @private\r\n     */\r\n    _parseVector(vectorVarintBuffer) {\r\n        //读取geometry类型的字节长度\r\n        let offset = this.headerLength;\r\n\r\n        let typeLength = vectorVarintBuffer.readInt32BE(offset);\r\n        offset = offset + this.intLength;\r\n        //读取数据类型。vector是多图层结构；其它geometry类型的为单图层结构\r\n        let type = vectorVarintBuffer.slice( offset, offset + typeLength).toString(\"utf-8\");\r\n        offset = offset + typeLength;\r\n        if (type !== this.vectorName) {\r\n            console.error(\"不是瓦片数据！\");\r\n            return;\r\n        }\r\n        //读取vector头属性\r\n        let array = this._parseHeaderPro(vectorVarintBuffer, offset);\r\n        offset = array[0];\r\n        this.vectorHeaderProMap = array[1];\r\n\r\n        //读取坐标数据索引字节开始位置\r\n        let indexLength = vectorVarintBuffer.readInt32BE(offset);\r\n        //截取index表述字节\r\n        offset = offset + this.intLength;\r\n        let indexBuffer = vectorVarintBuffer.slice(offset, offset + indexLength);\r\n        //截取数字字节\r\n        offset = offset + indexLength;\r\n        let dataBuffer = vectorVarintBuffer.slice(offset, this.vectorVarintBuffer.length);\r\n\r\n        let layerNameLength = 0;\r\n        let layerName;\r\n        let dataLength;\r\n        let dataBegin = 0;\r\n        let begin = 0;\r\n        let end = 0;\r\n        let layerBuffer;\r\n        for (let i = 0; i < indexBuffer.length;) {\r\n            begin = i;\r\n            layerNameLength = indexBuffer.readInt32BE(begin);\r\n            begin = begin + this.intLength;\r\n            end = begin + layerNameLength;\r\n            layerName = indexBuffer.toString(this.encoding, begin, end);\r\n            begin = end;\r\n            dataLength = indexBuffer.readInt32BE(begin);\r\n            begin = begin + this.intLength;\r\n            //截取每个layer的坐标字节段\r\n            layerBuffer = dataBuffer.slice(dataBegin, dataBegin + dataLength);\r\n            dataBegin = dataBegin + dataLength;\r\n            this.layerMap[layerName] = layerBuffer;\r\n            this._parseLayer(layerName, layerBuffer);\r\n            i = begin;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 解析图层Buffer\r\n     * @param layerName 图层名\r\n     * @param buffer varint编码Buffer\r\n     * @private\r\n     */\r\n    _parseLayer(layerName, layerBuffer) {\r\n\r\n        if (layerBuffer.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let offset = this.headerLength;\r\n        //读取layer头属性\r\n        let array = this._parseHeaderPro(layerBuffer, offset);\r\n        offset = array[0];\r\n        this.layerHeaderProMap[layerName] = array[1];\r\n        this.layerHeaderProBuffer[layerName] = array[2];\r\n        //读取空间类型\r\n        let geometrytype = this.layerHeaderProMap[layerName][this.gTypeKey];\r\n        this.geometyTypeMap[layerName] = geometrytype;\r\n        //要素数组\r\n        let featureLength = layerBuffer.readInt32BE(offset);\r\n        offset = offset + this.intLength;\r\n        let featureBuffer = layerBuffer.slice(offset, offset + featureLength);\r\n        featureBuffer = uncompress(featureBuffer);\r\n        offset = offset + featureLength;\r\n        this.featureMap[layerName]=featureBuffer;\r\n        //读取偏移量数组\r\n        let indexRes = this._parseIndex(layerBuffer, offset);\r\n        offset = indexRes.offset;\r\n        this.offsetBufferMap[layerName]=indexRes.buffer;\r\n        this.offsetArrayMap[layerName]=indexRes.array;\r\n        //读取坐标\r\n        let varintBuf = layerBuffer.slice(offset);\r\n        this.varintMap[layerName]=varintBuf;\r\n    }\r\n        /**\r\n         * 解析头属性\r\n         * @param varintBuffer\r\n         * @param offset\r\n         * @returns {(*|Map<any, any>)[]}\r\n         * @private\r\n         */\r\n    _parseHeaderPro(varintBuffer, offset) {\r\n        let proMap = new Object();\r\n        let headerProLength = varintBuffer.readInt32BE(offset);\r\n        offset = offset + this.intLength;\r\n        let headerProBuffer = varintBuffer.slice(offset, offset + headerProLength);\r\n        offset = offset + headerProLength;\r\n        if (headerProLength == 0) {\r\n            return [offset, proMap];\r\n        }\r\n\r\n        let headerProArray = GisTool.Utf8ArrayToStr(uncompress(headerProBuffer)).split(\":\");\r\n\r\n        for (let i = 0; i < headerProArray.length / 2; i++) {\r\n            proMap[headerProArray[i * 2]] = headerProArray[i * 2 + 1];\r\n        }\r\n\r\n        return [offset, proMap, headerProBuffer];\r\n    }\r\n\r\n    /**\r\n     * 解析偏移量数组\r\n     * @param layerBuffer\r\n     * @param offset\r\n     * @returns {{offset: *, array: *[], buffer: *}}\r\n     * @private\r\n     */\r\n    _parseIndex(layerBuffer, offset) {\r\n        //读取偏移量数组长度\r\n        let length = layerBuffer.readInt32BE(offset);\r\n        offset = offset + this.intLength;\r\n        //截取出偏移量数组\r\n        let buffer = layerBuffer.slice(offset, offset + length);\r\n        offset = offset + length;\r\n        //把varint编码的byte流转换为数组\r\n        let array = CodeTool.varintToIntArray(buffer);\r\n        return {\r\n            \"offset\": offset,\r\n            \"buffer\": buffer,\r\n            \"array\": array\r\n        };\r\n    }\r\n\r\n    _lazyParseFeature(layerName) {\r\n        let featureArray = this.featureArrayMap[layerName];\r\n        let proSize = this.proSizeObj[layerName];\r\n        if (featureArray == undefined) {\r\n            let buffer = this.featureMap[layerName];\r\n            let props = [];\r\n            if (buffer.length > 0) {\r\n                props = GisTool.Utf8ArrayToStr(this.featureMap[layerName]).split(this.featureSpace);\r\n            } else {\r\n                this.featureArrayMap[layerName] = [];\r\n                return [];\r\n            }\r\n            let item = [];\r\n            let length = (props.length - 1) / proSize;\r\n            featureArray = [];\r\n            let current = 0;\r\n            let next = current;\r\n            for (let i = 0; i < length; i++) {\r\n                next = current + proSize;\r\n                item = props.slice(current, next);\r\n                featureArray.push(item);\r\n                current = next;\r\n            }\r\n            this.featureArrayMap[layerName] = featureArray;\r\n        }\r\n        return featureArray;\r\n    }\r\n\r\n    /**\r\n     * varint坐标转数字坐标\r\n     * @param buffer varint字节数组\r\n     * @param precision 数字精度\r\n     * @returns {[number]} 数字坐标\r\n     * @private\r\n     */\r\n    _bufferToDoubleArray(buffer, precision) {\r\n        let varintCode = [];\r\n        let path = [];\r\n        let high;\r\n        let bf_index = 0;\r\n        let nums = [];\r\n        let oldX = 0;\r\n        let oldY = 0;\r\n        let x;\r\n        let y;\r\n        let isX = true;\r\n        //多循环一次处理最后一段数据\r\n        for (let i = 0; i <= buffer.length; i++) { //buffer.length\r\n            high = 0x00000000 | (buffer[i] >> 7) & 0x01;\r\n            if (high === 0 && bf_index > 0) {\r\n                if (bf_index > 0 && bf_index <= 5) {\r\n                    if (isX) {\r\n                        x = CodeTool.varintToInt(varintCode) + oldX;\r\n                        path.push(x / precision);\r\n                        isX = false;\r\n                        oldX = x;\r\n                    } else {\r\n                        y = CodeTool.varintToInt(varintCode) + oldY;\r\n                        path.push(y / precision);\r\n                        isX = true;\r\n                        oldY = y;\r\n                    }\r\n                    bf_index = 0;\r\n                    varintCode = [];\r\n                } else if (bf_index > 5) { //bf_index > 5为间隔符\r\n                    oldX = 0;\r\n                    oldY = 0;\r\n                    bf_index = 0;\r\n                    varintCode = [];\r\n                    nums.push(path);\r\n                    path = [];\r\n                }\r\n            }\r\n\r\n             if (i !== buffer.length){\r\n                varintCode.push(buffer[i]);\r\n                bf_index++;\r\n            } else {\r\n                if (path.length > 0) {\r\n                nums.push(path);\r\n                }\r\n            }\r\n        }\r\n        return nums;\r\n    }\r\n\r\n}\r\nexport default VarintReader;"],"names":["uncompress","GisTool"],"mappings":"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"}