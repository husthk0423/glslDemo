{"version":3,"file":"TerrainWorker.js","sources":["../../../../Source/Core/WebMercatorTilingScheme.js","../../../../Source/WorkersES6/TerrainWorker.js"],"sourcesContent":["import Cartesian2 from \"./Cartesian2.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport Ellipsoid from \"./Ellipsoid.js\";\nimport Rectangle from \"./Rectangle.js\";\nimport WebMercatorProjection from \"./WebMercatorProjection.js\";\n\n/**\n * A tiling scheme for geometry referenced to a {@link WebMercatorProjection}, EPSG:3857.  This is\n * the tiling scheme used by Google Maps, Microsoft Bing Maps, and most of ESRI ArcGIS Online.\n *\n * @alias WebMercatorTilingScheme\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid whose surface is being tiled. Defaults to\n * the WGS84 ellipsoid.\n * @param {Number} [options.numberOfLevelZeroTilesX=1] The number of tiles in the X direction at level zero of\n *        the tile tree.\n * @param {Number} [options.numberOfLevelZeroTilesY=1] The number of tiles in the Y direction at level zero of\n *        the tile tree.\n * @param {Cartesian2} [options.rectangleSouthwestInMeters] The southwest corner of the rectangle covered by the\n *        tiling scheme, in meters.  If this parameter or rectangleNortheastInMeters is not specified, the entire\n *        globe is covered in the longitude direction and an equal distance is covered in the latitude\n *        direction, resulting in a square projection.\n * @param {Cartesian2} [options.rectangleNortheastInMeters] The northeast corner of the rectangle covered by the\n *        tiling scheme, in meters.  If this parameter or rectangleSouthwestInMeters is not specified, the entire\n *        globe is covered in the longitude direction and an equal distance is covered in the latitude\n *        direction, resulting in a square projection.\n */\nfunction WebMercatorTilingScheme(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._ellipsoid = defaultValue(options.ellipsoid, Ellipsoid.WGS84);\n  this._numberOfLevelZeroTilesX = defaultValue(\n    options.numberOfLevelZeroTilesX,\n    1\n  );\n  this._numberOfLevelZeroTilesY = defaultValue(\n    options.numberOfLevelZeroTilesY,\n    1\n  );\n\n  this._projection = new WebMercatorProjection(this._ellipsoid);\n\n  if (\n    defined(options.rectangleSouthwestInMeters) &&\n    defined(options.rectangleNortheastInMeters)\n  ) {\n    this._rectangleSouthwestInMeters = options.rectangleSouthwestInMeters;\n    this._rectangleNortheastInMeters = options.rectangleNortheastInMeters;\n  } else {\n    var semimajorAxisTimesPi = this._ellipsoid.maximumRadius * Math.PI;\n    this._rectangleSouthwestInMeters = new Cartesian2(\n      -semimajorAxisTimesPi,\n      -semimajorAxisTimesPi\n    );\n    this._rectangleNortheastInMeters = new Cartesian2(\n      semimajorAxisTimesPi,\n      semimajorAxisTimesPi\n    );\n  }\n\n  var southwest = this._projection.unproject(this._rectangleSouthwestInMeters);\n  var northeast = this._projection.unproject(this._rectangleNortheastInMeters);\n  this._rectangle = new Rectangle(\n    southwest.longitude,\n    southwest.latitude,\n    northeast.longitude,\n    northeast.latitude\n  );\n}\n\nObject.defineProperties(WebMercatorTilingScheme.prototype, {\n  /**\n   * Gets the ellipsoid that is tiled by this tiling scheme.\n   * @memberof WebMercatorTilingScheme.prototype\n   * @type {Ellipsoid}\n   */\n  ellipsoid: {\n    get: function () {\n      return this._ellipsoid;\n    },\n  },\n\n  /**\n   * Gets the rectangle, in radians, covered by this tiling scheme.\n   * @memberof WebMercatorTilingScheme.prototype\n   * @type {Rectangle}\n   */\n  rectangle: {\n    get: function () {\n      return this._rectangle;\n    },\n  },\n\n  /**\n   * Gets the map projection used by this tiling scheme.\n   * @memberof WebMercatorTilingScheme.prototype\n   * @type {MapProjection}\n   */\n  projection: {\n    get: function () {\n      return this._projection;\n    },\n  },\n});\n\n/**\n * Gets the total number of tiles in the X direction at a specified level-of-detail.\n *\n * @param {Number} level The level-of-detail.\n * @returns {Number} The number of tiles in the X direction at the given level.\n */\nWebMercatorTilingScheme.prototype.getNumberOfXTilesAtLevel = function (level) {\n  return this._numberOfLevelZeroTilesX << level;\n};\n\n/**\n * Gets the total number of tiles in the Y direction at a specified level-of-detail.\n *\n * @param {Number} level The level-of-detail.\n * @returns {Number} The number of tiles in the Y direction at the given level.\n */\nWebMercatorTilingScheme.prototype.getNumberOfYTilesAtLevel = function (level) {\n  return this._numberOfLevelZeroTilesY << level;\n};\n\n/**\n * Transforms a rectangle specified in geodetic radians to the native coordinate system\n * of this tiling scheme.\n *\n * @param {Rectangle} rectangle The rectangle to transform.\n * @param {Rectangle} [result] The instance to which to copy the result, or undefined if a new instance\n *        should be created.\n * @returns {Rectangle} The specified 'result', or a new object containing the native rectangle if 'result'\n *          is undefined.\n */\nWebMercatorTilingScheme.prototype.rectangleToNativeRectangle = function (\n  rectangle,\n  result\n) {\n  var projection = this._projection;\n  var southwest = projection.project(Rectangle.southwest(rectangle));\n  var northeast = projection.project(Rectangle.northeast(rectangle));\n\n  if (!defined(result)) {\n    return new Rectangle(southwest.x, southwest.y, northeast.x, northeast.y);\n  }\n\n  result.west = southwest.x;\n  result.south = southwest.y;\n  result.east = northeast.x;\n  result.north = northeast.y;\n  return result;\n};\n\n/**\n * Converts tile x, y coordinates and level to a rectangle expressed in the native coordinates\n * of the tiling scheme.\n *\n * @param {Number} x The integer x coordinate of the tile.\n * @param {Number} y The integer y coordinate of the tile.\n * @param {Number} level The tile level-of-detail.  Zero is the least detailed.\n * @param {Object} [result] The instance to which to copy the result, or undefined if a new instance\n *        should be created.\n * @returns {Rectangle} The specified 'result', or a new object containing the rectangle\n *          if 'result' is undefined.\n */\nWebMercatorTilingScheme.prototype.tileXYToNativeRectangle = function (\n  x,\n  y,\n  level,\n  result\n) {\n  var xTiles = this.getNumberOfXTilesAtLevel(level);\n  var yTiles = this.getNumberOfYTilesAtLevel(level);\n\n  var xTileWidth =\n    (this._rectangleNortheastInMeters.x - this._rectangleSouthwestInMeters.x) /\n    xTiles;\n  var west = this._rectangleSouthwestInMeters.x + x * xTileWidth;\n  var east = this._rectangleSouthwestInMeters.x + (x + 1) * xTileWidth;\n\n  var yTileHeight =\n    (this._rectangleNortheastInMeters.y - this._rectangleSouthwestInMeters.y) /\n    yTiles;\n  var north = this._rectangleNortheastInMeters.y - y * yTileHeight;\n  var south = this._rectangleNortheastInMeters.y - (y + 1) * yTileHeight;\n\n  if (!defined(result)) {\n    return new Rectangle(west, south, east, north);\n  }\n\n  result.west = west;\n  result.south = south;\n  result.east = east;\n  result.north = north;\n  return result;\n};\n\n/**\n * Converts tile x, y coordinates and level to a cartographic rectangle in radians.\n *\n * @param {Number} x The integer x coordinate of the tile.\n * @param {Number} y The integer y coordinate of the tile.\n * @param {Number} level The tile level-of-detail.  Zero is the least detailed.\n * @param {Object} [result] The instance to which to copy the result, or undefined if a new instance\n *        should be created.\n * @returns {Rectangle} The specified 'result', or a new object containing the rectangle\n *          if 'result' is undefined.\n */\nWebMercatorTilingScheme.prototype.tileXYToRectangle = function (\n  x,\n  y,\n  level,\n  result\n) {\n  var nativeRectangle = this.tileXYToNativeRectangle(x, y, level, result);\n\n  var projection = this._projection;\n  var southwest = projection.unproject(\n    new Cartesian2(nativeRectangle.west, nativeRectangle.south)\n  );\n  var northeast = projection.unproject(\n    new Cartesian2(nativeRectangle.east, nativeRectangle.north)\n  );\n\n  nativeRectangle.west = southwest.longitude;\n  nativeRectangle.south = southwest.latitude;\n  nativeRectangle.east = northeast.longitude;\n  nativeRectangle.north = northeast.latitude;\n  return nativeRectangle;\n};\n\n/**\n * Calculates the tile x, y coordinates of the tile containing\n * a given cartographic position.\n *\n * @param {Cartographic} position The position.\n * @param {Number} level The tile level-of-detail.  Zero is the least detailed.\n * @param {Cartesian2} [result] The instance to which to copy the result, or undefined if a new instance\n *        should be created.\n * @returns {Cartesian2} The specified 'result', or a new object containing the tile x, y coordinates\n *          if 'result' is undefined.\n */\nWebMercatorTilingScheme.prototype.positionToTileXY = function (\n  position,\n  level,\n  result\n) {\n  var rectangle = this._rectangle;\n  if (!Rectangle.contains(rectangle, position)) {\n    // outside the bounds of the tiling scheme\n    return undefined;\n  }\n\n  var xTiles = this.getNumberOfXTilesAtLevel(level);\n  var yTiles = this.getNumberOfYTilesAtLevel(level);\n\n  var overallWidth =\n    this._rectangleNortheastInMeters.x - this._rectangleSouthwestInMeters.x;\n  var xTileWidth = overallWidth / xTiles;\n  var overallHeight =\n    this._rectangleNortheastInMeters.y - this._rectangleSouthwestInMeters.y;\n  var yTileHeight = overallHeight / yTiles;\n\n  var projection = this._projection;\n\n  var webMercatorPosition = projection.project(position);\n  var distanceFromWest =\n    webMercatorPosition.x - this._rectangleSouthwestInMeters.x;\n  var distanceFromNorth =\n    this._rectangleNortheastInMeters.y - webMercatorPosition.y;\n\n  var xTileCoordinate = (distanceFromWest / xTileWidth) | 0;\n  if (xTileCoordinate >= xTiles) {\n    xTileCoordinate = xTiles - 1;\n  }\n  var yTileCoordinate = (distanceFromNorth / yTileHeight) | 0;\n  if (yTileCoordinate >= yTiles) {\n    yTileCoordinate = yTiles - 1;\n  }\n\n  if (!defined(result)) {\n    return new Cartesian2(xTileCoordinate, yTileCoordinate);\n  }\n\n  result.x = xTileCoordinate;\n  result.y = yTileCoordinate;\n  return result;\n};\nexport default WebMercatorTilingScheme;\n","/**\r\n * Cesium - https://github.com/AnalyticalGraphicsInc/cesium\r\n *\r\n * Copyright 2011-2017 Cesium Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * Columbus View (Pat. Pend.)\r\n *\r\n * Portions licensed separately.\r\n * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.\r\n */\r\n\r\nimport Resource from '../Core/Resource.js';\r\nimport GeographicTilingScheme from '../Core/GeographicTilingScheme.js';\r\nimport WebMercatorTilingScheme from '../Core/WebMercatorTilingScheme.js';\r\nimport when from '../ThirdParty/when.js';\r\nimport UPNG from './UPNG';\r\n\r\nimport ElevationTool from './ElevationTool.js';\r\nimport TerrainUpsample from './TerrainUpsample.js';\r\nimport Cache from './Cache.js';\r\n\r\n\r\n\r\n//采样后的地形瓦片宽度\r\nlet w =65;\r\nlet dbMap ={};\r\n\r\nlet indexDbName;\r\nlet tilingScheme;\r\nlet maxLevel =16;\r\nlet tileSize =512;\r\n//地形最大一级的缓存\r\nlet cache = new Cache(100);\r\n//正在发送请求的map\r\nlet loadingMap = {};\r\n\r\n\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\n    function init(parameters){\r\n        w = parameters.w;\r\n        indexDbName = parameters.indexDbName;\r\n        tileSize = parameters.tileSize;\r\n        if(parameters.tilingSchemeName == 'GeographicTilingScheme'){\r\n            tilingScheme = new GeographicTilingScheme({tileSize:tileSize});\r\n        }else{\r\n            tilingScheme = new WebMercatorTilingScheme({tileSize:tileSize});\r\n        }\r\n        maxLevel = parameters.maxLevel;\r\n\r\n        return ElevationTool.getDBMap([indexDbName],dbMap);\r\n    }\r\n\r\n    function getTile(parameters,transferableObjects){\r\n        if(parameters.init == true){\r\n            return init(parameters);\r\n        }\r\n\r\n        let deferred = when.defer();\r\n        parameters.xyzStr =  parameters.xyz.x+'_'+parameters.xyz.y+'_'+parameters.xyz.z;\r\n\r\n        let promise = ElevationTool.getElevation(dbMap,[indexDbName],parameters.xyzStr).promise;\r\n        promise.then(function(terrainDataMap){\r\n            for(let key in terrainDataMap){\r\n                let terrainData = terrainDataMap[key];\r\n                if(terrainData){\r\n                    let resampleData = resample(terrainData.data,tileSize,transferableObjects);\r\n                    deferred.resolve(resampleData);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if(parameters.xyz.z > maxLevel){\r\n                //取父级数据重采样\r\n                upSample(parameters,maxLevel,deferred,transferableObjects);\r\n                return deferred.promise;\r\n            }else{\r\n                //发送请求\r\n                requestTile(parameters,deferred,transferableObjects);\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    function upSample(parameters,maxLevel,deferred,transferableObjects){\r\n        let scale = Math.pow(2,parameters.xyz.z-maxLevel);\r\n        let parentXYZ = {x:Math.floor(parameters.xyz.x/scale),y:Math.floor(parameters.xyz.y/scale),z:maxLevel};\r\n        let xyz = parameters.xyz;\r\n        let xyzStr = parentXYZ.x+'_'+parentXYZ.y+'_'+parentXYZ.z;\r\n        let cacheTerrainData = cache.get(xyzStr);\r\n        if(cacheTerrainData){\r\n            let data =TerrainUpsample.upsample(tilingScheme,cacheTerrainData,tileSize,tileSize,parentXYZ,xyz);\r\n            let resampleData = resample(data,tileSize,transferableObjects);\r\n\r\n            let promise = ElevationTool.updateElevation(dbMap[indexDbName],indexDbName,parameters.xyzStr,data).promise;\r\n            promise.always(function(e){\r\n                deferred.resolve(resampleData);\r\n            });\r\n            // promise.then(function(e){\r\n            //     deferred.resolve(resampleData);\r\n            // },function(e){\r\n            //     deferred.resolve(resampleData);\r\n            // });\r\n        }else{\r\n            //请求父级的最大层级的瓦片\r\n            let resourceUrl = parameters.resourceUrl;\r\n            resourceUrl = resourceUrl.replace('{x}',parentXYZ.x);\r\n            resourceUrl = resourceUrl.replace('{y}',parentXYZ.y);\r\n            resourceUrl = resourceUrl.replace('{z}',parentXYZ.z);\r\n            parameters.url = resourceUrl;\r\n            parameters.xyz =  parentXYZ;\r\n            parameters.xyzStr =  parameters.xyz.x+'_'+parameters.xyz.y+'_'+parameters.xyz.z;\r\n\r\n            if(loadingMap[resourceUrl]){//如果父级瓦片正在请求中\r\n                deferred.reject(null);\r\n            }else{\r\n                let deferred1 = when.defer();\r\n                requestTile(parameters,deferred1,transferableObjects);\r\n                loadingMap[resourceUrl] = true;\r\n                deferred1.promise.then(function(){\r\n                    let cacheTerrainData = cache.get(parameters.xyzStr);\r\n                    let data =TerrainUpsample.upsample(tilingScheme,cacheTerrainData,tileSize,tileSize,parentXYZ,xyz);\r\n                    let resampleData = resample(data,tileSize,transferableObjects);\r\n\r\n                    let key = xyz.x+'_'+xyz.y+'_'+xyz.z;\r\n                    let promise = ElevationTool.updateElevation(dbMap[indexDbName],indexDbName,key,data).promise;\r\n                    promise.always(function(e){\r\n                        delete loadingMap[resourceUrl];\r\n                        deferred.resolve(resampleData);\r\n                    });\r\n                    // promise.then(function(e){\r\n                    //     delete loadingMap[resourceUrl];\r\n                    //     deferred.resolve(resampleData);\r\n                    // },function(e){\r\n                    //     delete loadingMap[resourceUrl];\r\n                    //     deferred.resolve(resampleData);\r\n                    // });\r\n\r\n                },function(){\r\n                    delete loadingMap[resourceUrl];\r\n                    deferred.reject(null);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function requestTile(parameters,deferred,transferableObjects){\r\n        var url = parameters.url;\r\n        var resource = new Resource({url:url});\r\n        resource.request.throttle = false;\r\n        resource.request.throttleByServer = true;\r\n        resource.request.type = 1;\r\n\r\n        var jsonPromise = resource.fetchArrayBuffer();\r\n\r\n        if(!jsonPromise){\r\n            deferred.reject(null);\r\n            return;\r\n        }\r\n\r\n        jsonPromise.then(function(deferred,arraybuffer){\r\n            let img   = UPNG.decode(arraybuffer);\r\n            let rgba = UPNG.toRGBA8(img)[0];\r\n            let pixels = new Uint8Array(rgba);\r\n            //解码高程\r\n            let data = decode(pixels,img.width);\r\n\r\n            //将地形最后一级数据放入缓存中\r\n            if(parameters.xyz.z == maxLevel){\r\n                cache.set(parameters.xyzStr,data);\r\n            }\r\n\r\n            let resampleData = resample(data,img.width,transferableObjects);\r\n            //将地形数据存入indexdb\r\n            let promise = ElevationTool.updateElevation(dbMap[indexDbName],indexDbName,parameters.xyzStr,data).promise;\r\n            promise.then(function(e){\r\n                deferred.resolve(resampleData);\r\n            },function(e){\r\n                deferred.resolve(resampleData);\r\n            })\r\n        }.bind(this,deferred));\r\n    }\r\n\r\n    /* global require */\r\n  function decode(pixels,width) {\r\n      let data = new Int16Array(width * width);\r\n      const dim = width;\r\n\r\n      //解码高程\r\n      for (let y = 0; y < dim; y++) {\r\n          for (let x = 0; x < dim; x++) {\r\n              const i = y * dim + x;\r\n              const j = i * 4;\r\n              let index = y  * dim + x ;\r\n              data[index] = unpack(pixels[j], pixels[j + 1], pixels[j + 2]);\r\n          }\r\n      }\r\n      return data;\r\n  }\r\n\r\n //重采样\r\n  function resample(data,width, transferableObjects){\r\n      let gap = Math.floor(width/(w -1));\r\n      let sData = new Int16Array(w*w);\r\n      let _minimumHeight = 10000;\r\n      let _maximumHeight = -20000\r\n\r\n      for (let y = 0; y < w; y++)\r\n      {\r\n          let yIndex = y * gap * width;\r\n          if(y == w -1){\r\n              yIndex = width * width -width;\r\n          }\r\n          //当前行的最大值\r\n          let maxI = yIndex +width -1;\r\n\r\n          for (let x = 0; x < w; x++)\r\n          {\r\n              let i = x * gap + yIndex;\r\n              if(x == w-1){\r\n                  i = maxI;\r\n              }\r\n              let index = x + y * w;\r\n              sData[index] = data[i];\r\n\r\n              if(_minimumHeight > data[i]){\r\n                  _minimumHeight = data[i];\r\n              }\r\n\r\n              if(_maximumHeight < data[i]){\r\n                  _maximumHeight = data[i];\r\n              }\r\n          }\r\n      }\r\n      transferableObjects.push(sData.buffer);\r\n      return {sData:sData,_minimumHeight:_minimumHeight,_maximumHeight:_maximumHeight};\r\n  }\r\n\r\n    function unpack(r, g, b) {\r\n        return Math.round((r * 256 * 256 + g * 256.0 + b) / 10.0 - 10000.0);\r\n    }\r\n\r\n    var result = createTaskProcessorWorker(getTile);\r\n    export default result;"],"names":["defaultValue","Ellipsoid","WebMercatorProjection","defined","Cartesian2","Rectangle","GeographicTilingScheme","when","Resource"],"mappings":"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"}