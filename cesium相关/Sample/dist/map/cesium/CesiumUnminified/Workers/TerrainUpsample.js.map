{"version":3,"file":"TerrainUpsample.js","sources":["../../../../Source/WorkersES6/TerrainUpsample.js"],"sourcesContent":["/**\r\n * Cesium - https://github.com/AnalyticalGraphicsInc/cesium\r\n *\r\n * Copyright 2011-2017 Cesium Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * Columbus View (Pat. Pend.)\r\n *\r\n * Portions licensed separately.\r\n * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.\r\n */\r\n\r\nimport CesiumMath from '../Core/Math.js';\r\nimport ElevationTool from './ElevationTool.js';\r\n/**\r\n* 地形重采样工具类\r\n*/\r\nclass TerrainUpsample {\r\n    // static upsample(tilingScheme,dbMap,indexDbName,xyz,parentXYZ,width,height){\r\n    //     let xyzStr = parentXYZ.x+'_'+parentXYZ.y+'_'+parentXYZ.z;\r\n    //     let promise = ElevationTool.getElevation(dbMap,[indexDbName],xyzStr).promise;\r\n    //     return promise.then(function(terrainDataMap){\r\n    //         for(let key in terrainDataMap){\r\n    //             let terrainData = terrainDataMap[key];\r\n    //             return TerrainUpsample.upsampleNow(tilingScheme,terrainData.data,width,height,parentXYZ.x,parentXYZ.y,parentXYZ.z,xyz.x,xyz.y,xyz.z);\r\n    //         }\r\n    //\r\n    //         return null;\r\n    //     });\r\n    // }\r\n\r\n\r\n    static upsample(tilingScheme,buffer,width,height,parentXYZ,xyz){\r\n        // console.time('upsampleNow');\r\n        var sourceRectangle = tilingScheme.tileXYToRectangle(parentXYZ.x, parentXYZ.y, parentXYZ.z);\r\n        var destinationRectangle = tilingScheme.tileXYToRectangle(xyz.x, xyz.y, xyz.z);\r\n\r\n        var stride = 1;\r\n        var heightOffset = 0;\r\n        var heightScale = 1;\r\n        var elementsPerHeight = 1;\r\n        var elementMultiplier = 256;\r\n        var isBigEndian = false;\r\n\r\n        let heights = new Int16Array(width*height);\r\n\r\n        for (var j = 0; j < height; ++j) {\r\n            var latitude = CesiumMath.lerp(destinationRectangle.north, destinationRectangle.south, j / (height - 1));\r\n            for (var i = 0; i < width; ++i) {\r\n                var longitude = CesiumMath.lerp(destinationRectangle.west, destinationRectangle.east, i / (width - 1));\r\n                var heightSample = TerrainUpsample.interpolateHeight(buffer, elementsPerHeight, elementMultiplier, stride, isBigEndian, sourceRectangle, width, height, longitude, latitude);\r\n                heightSample = heightSample * heightScale + heightOffset;\r\n\r\n                heights[j * width + i] = heightSample;\r\n            }\r\n        }\r\n\r\n        // console.timeEnd('upsampleNow');\r\n        return heights;\r\n    }\r\n\r\n\r\n    static interpolateHeight(sourceHeights, elementsPerHeight, elementMultiplier, stride, isBigEndian, sourceRectangle, width, height, longitude, latitude) {\r\n        var fromWest = (longitude - sourceRectangle.west) * (width - 1) / (sourceRectangle.east - sourceRectangle.west);\r\n        var fromSouth = (latitude - sourceRectangle.south) * (height - 1) / (sourceRectangle.north - sourceRectangle.south);\r\n\r\n        var westInteger = fromWest | 0;\r\n        var eastInteger = westInteger + 1;\r\n        if (eastInteger >= width) {\r\n            eastInteger = width - 1;\r\n            westInteger = width - 2;\r\n        }\r\n\r\n        var southInteger = fromSouth | 0;\r\n        var northInteger = southInteger + 1;\r\n        if (northInteger >= height) {\r\n            northInteger = height - 1;\r\n            southInteger = height - 2;\r\n        }\r\n\r\n        var dx = fromWest - westInteger;\r\n        var dy = fromSouth - southInteger;\r\n\r\n        southInteger = height - 1 - southInteger;\r\n        northInteger = height - 1 - northInteger;\r\n\r\n        var southwestHeight = TerrainUpsample.getHeight(sourceHeights, elementsPerHeight, elementMultiplier, stride, isBigEndian, southInteger * width + westInteger);\r\n        var southeastHeight = TerrainUpsample.getHeight(sourceHeights, elementsPerHeight, elementMultiplier, stride, isBigEndian, southInteger * width + eastInteger);\r\n        var northwestHeight = TerrainUpsample.getHeight(sourceHeights, elementsPerHeight, elementMultiplier, stride, isBigEndian, northInteger * width + westInteger);\r\n        var northeastHeight = TerrainUpsample.getHeight(sourceHeights, elementsPerHeight, elementMultiplier, stride, isBigEndian, northInteger * width + eastInteger);\r\n\r\n        return TerrainUpsample.triangleInterpolateHeight(dx, dy, southwestHeight, southeastHeight, northwestHeight, northeastHeight);\r\n    }\r\n\r\n    static getHeight(heights, elementsPerHeight, elementMultiplier, stride, isBigEndian, index) {\r\n        index *= stride;\r\n\r\n        var height = 0;\r\n        var i;\r\n\r\n        if (isBigEndian) {\r\n            for (i = 0; i < elementsPerHeight; ++i) {\r\n                height = (height * elementMultiplier) + heights[index + i];\r\n            }\r\n        } else {\r\n            for (i = elementsPerHeight - 1; i >= 0; --i) {\r\n                height = (height * elementMultiplier) + heights[index + i];\r\n            }\r\n        }\r\n\r\n        return height;\r\n    }\r\n\r\n    static triangleInterpolateHeight(dX, dY, southwestHeight, southeastHeight, northwestHeight, northeastHeight) {\r\n        // The HeightmapTessellator bisects the quad from southwest to northeast.\r\n        if (dY < dX) {\r\n            // Lower right triangle\r\n            return southwestHeight + (dX * (southeastHeight - southwestHeight)) + (dY * (northeastHeight - southeastHeight));\r\n        }\r\n\r\n        // Upper left triangle\r\n        return southwestHeight + (dX * (northeastHeight - northwestHeight)) + (dY * (northwestHeight - southwestHeight));\r\n    }\r\n}\r\nexport default TerrainUpsample;\r\n"],"names":["CesiumMath"],"mappings":"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"}