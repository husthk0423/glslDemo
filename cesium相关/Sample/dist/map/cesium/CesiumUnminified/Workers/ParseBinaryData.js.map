{"version":3,"file":"ParseBinaryData.js","sources":["../../../../Source/WorkersES6/ParseBinaryData.js"],"sourcesContent":["/**\r\n * Cesium - https://github.com/AnalyticalGraphicsInc/cesium\r\n *\r\n * Copyright 2011-2017 Cesium Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * Columbus View (Pat. Pend.)\r\n *\r\n * Portions licensed separately.\r\n * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.\r\n */\r\n\r\n\r\nimport Buffer from './Buffer';\r\nimport VarintReader from './VarintReader';\r\n        function parseBinaryData(data,layerFieldMap,serverInfo){\r\n            let buf = toBuffer(data);\r\n            let vant = new VarintReader(buf, 4, layerFieldMap);\r\n            let layerNameArr = vant.getAllLayerNames();\r\n            let layers = {};\r\n            for (let i = 0; i < layerNameArr.length; i++) {\r\n                let layerName = layerNameArr[i];\r\n                layers[layerName] = {\r\n                    features: [],\r\n                    fieldsConfig: serverInfo[layerName] ? serverInfo[layerName].fieldsConfig : {},\r\n                    type: 1\r\n                };\r\n\r\n                let geometryType =vant.getGeometryType(layerName);\r\n                let props = vant.getLayerPro(layerName);\r\n                if (geometryType.toLowerCase() == \"point\") {\r\n                    layers[layerName].type = 1;\r\n                } else if (geometryType.toLowerCase() == \"line\" ||\r\n                    geometryType.toLowerCase() == \"linestring\" || geometryType.toLowerCase() == \"multilinestring\") {\r\n                    layers[layerName].type = 2;\r\n                }\r\n                if (props && props.length > 0) {\r\n                    for (let k = 0; k < props.length; k++) {\r\n                        let tDataArr = [];\r\n                        tDataArr.push(geometryType);\r\n                        tDataArr.push(props[k]);\r\n                        tDataArr.push(vant.getCoordinatesByIndex(layerName, k, 10));\r\n                        layers[layerName].features.push(tDataArr);\r\n                    }\r\n                }\r\n            }\r\n            return layers;\r\n        }\r\n\r\n        function toBuffer(ab) {\r\n            var buf = new Buffer(ab.byteLength);\r\n            var view = new Uint8Array(ab);\r\n            for (var i = 0; i < buf.length; ++i) {\r\n                buf[i] = view[i];\r\n            }\r\n            return buf;\r\n        }\r\n\r\n\r\n    export default parseBinaryData;"],"names":[],"mappings":"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"}