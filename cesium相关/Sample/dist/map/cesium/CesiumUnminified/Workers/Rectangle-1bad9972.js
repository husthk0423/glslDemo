define(["exports","./Cartesian2-cce28994","./Check-edea0f91","./defaultValue-81eec7ed","./Math-29cbc3fa"],(function(t,e,a,n,u){"use strict";function i(t,e,a,u){this.west=n.defaultValue(t,0),this.south=n.defaultValue(e,0),this.east=n.defaultValue(a,0),this.north=n.defaultValue(u,0)}Object.defineProperties(i.prototype,{width:{get:function(){return i.computeWidth(this)}},height:{get:function(){return i.computeHeight(this)}}}),i.packedLength=4,i.pack=function(t,e,a){return a=n.defaultValue(a,0),e[a++]=t.west,e[a++]=t.south,e[a++]=t.east,e[a]=t.north,e},i.unpack=function(t,e,a){return e=n.defaultValue(e,0),n.defined(a)||(a=new i),a.west=t[e++],a.south=t[e++],a.east=t[e++],a.north=t[e],a},i.computeWidth=function(t){var e=t.east,a=t.west;return e<a&&(e+=u.CesiumMath.TWO_PI),e-a},i.computeHeight=function(t){return t.north-t.south},i.fromDegrees=function(t,e,a,s,h){return t=u.CesiumMath.toRadians(n.defaultValue(t,0)),e=u.CesiumMath.toRadians(n.defaultValue(e,0)),a=u.CesiumMath.toRadians(n.defaultValue(a,0)),s=u.CesiumMath.toRadians(n.defaultValue(s,0)),n.defined(h)?(h.west=t,h.south=e,h.east=a,h.north=s,h):new i(t,e,a,s)},i.fromRadians=function(t,e,a,u,s){return n.defined(s)?(s.west=n.defaultValue(t,0),s.south=n.defaultValue(e,0),s.east=n.defaultValue(a,0),s.north=n.defaultValue(u,0),s):new i(t,e,a,u)},i.fromCartographicArray=function(t,e){for(var a=Number.MAX_VALUE,s=-Number.MAX_VALUE,h=Number.MAX_VALUE,o=-Number.MAX_VALUE,r=Number.MAX_VALUE,d=-Number.MAX_VALUE,l=0,m=t.length;l<m;l++){var M=t[l];a=Math.min(a,M.longitude),s=Math.max(s,M.longitude),r=Math.min(r,M.latitude),d=Math.max(d,M.latitude);var f=M.longitude>=0?M.longitude:M.longitude+u.CesiumMath.TWO_PI;h=Math.min(h,f),o=Math.max(o,f)}return s-a>o-h&&(a=h,(s=o)>u.CesiumMath.PI&&(s-=u.CesiumMath.TWO_PI),a>u.CesiumMath.PI&&(a-=u.CesiumMath.TWO_PI)),n.defined(e)?(e.west=a,e.south=r,e.east=s,e.north=d,e):new i(a,r,s,d)},i.fromCartesianArray=function(t,a,s){a=n.defaultValue(a,e.Ellipsoid.WGS84);for(var h=Number.MAX_VALUE,o=-Number.MAX_VALUE,r=Number.MAX_VALUE,d=-Number.MAX_VALUE,l=Number.MAX_VALUE,m=-Number.MAX_VALUE,M=0,f=t.length;M<f;M++){var c=a.cartesianToCartographic(t[M]);h=Math.min(h,c.longitude),o=Math.max(o,c.longitude),l=Math.min(l,c.latitude),m=Math.max(m,c.latitude);var g=c.longitude>=0?c.longitude:c.longitude+u.CesiumMath.TWO_PI;r=Math.min(r,g),d=Math.max(d,g)}return o-h>d-r&&(h=r,(o=d)>u.CesiumMath.PI&&(o-=u.CesiumMath.TWO_PI),h>u.CesiumMath.PI&&(h-=u.CesiumMath.TWO_PI)),n.defined(s)?(s.west=h,s.south=l,s.east=o,s.north=m,s):new i(h,l,o,m)},i.clone=function(t,e){if(n.defined(t))return n.defined(e)?(e.west=t.west,e.south=t.south,e.east=t.east,e.north=t.north,e):new i(t.west,t.south,t.east,t.north)},i.equalsEpsilon=function(t,e,a){return a=n.defaultValue(a,0),t===e||n.defined(t)&&n.defined(e)&&Math.abs(t.west-e.west)<=a&&Math.abs(t.south-e.south)<=a&&Math.abs(t.east-e.east)<=a&&Math.abs(t.north-e.north)<=a},i.prototype.clone=function(t){return i.clone(this,t)},i.prototype.equals=function(t){return i.equals(this,t)},i.equals=function(t,e){return t===e||n.defined(t)&&n.defined(e)&&t.west===e.west&&t.south===e.south&&t.east===e.east&&t.north===e.north},i.prototype.equalsEpsilon=function(t,e){return i.equalsEpsilon(this,t,e)},i.validate=function(t){},i.southwest=function(t,a){return n.defined(a)?(a.longitude=t.west,a.latitude=t.south,a.height=0,a):new e.Cartographic(t.west,t.south)},i.northwest=function(t,a){return n.defined(a)?(a.longitude=t.west,a.latitude=t.north,a.height=0,a):new e.Cartographic(t.west,t.north)},i.northeast=function(t,a){return n.defined(a)?(a.longitude=t.east,a.latitude=t.north,a.height=0,a):new e.Cartographic(t.east,t.north)},i.southeast=function(t,a){return n.defined(a)?(a.longitude=t.east,a.latitude=t.south,a.height=0,a):new e.Cartographic(t.east,t.south)},i.center=function(t,a){var i=t.east,s=t.west;i<s&&(i+=u.CesiumMath.TWO_PI);var h=u.CesiumMath.negativePiToPi(.5*(s+i)),o=.5*(t.south+t.north);return n.defined(a)?(a.longitude=h,a.latitude=o,a.height=0,a):new e.Cartographic(h,o)},i.intersection=function(t,e,a){var s=t.east,h=t.west,o=e.east,r=e.west;s<h&&o>0?s+=u.CesiumMath.TWO_PI:o<r&&s>0&&(o+=u.CesiumMath.TWO_PI),s<h&&r<0?r+=u.CesiumMath.TWO_PI:o<r&&h<0&&(h+=u.CesiumMath.TWO_PI);var d=u.CesiumMath.negativePiToPi(Math.max(h,r)),l=u.CesiumMath.negativePiToPi(Math.min(s,o));if(!((t.west<t.east||e.west<e.east)&&l<=d)){var m=Math.max(t.south,e.south),M=Math.min(t.north,e.north);if(!(m>=M))return n.defined(a)?(a.west=d,a.south=m,a.east=l,a.north=M,a):new i(d,m,l,M)}},i.simpleIntersection=function(t,e,a){var u=Math.max(t.west,e.west),s=Math.max(t.south,e.south),h=Math.min(t.east,e.east),o=Math.min(t.north,e.north);if(!(s>=o||u>=h))return n.defined(a)?(a.west=u,a.south=s,a.east=h,a.north=o,a):new i(u,s,h,o)},i.union=function(t,e,a){n.defined(a)||(a=new i);var s=t.east,h=t.west,o=e.east,r=e.west;s<h&&o>0?s+=u.CesiumMath.TWO_PI:o<r&&s>0&&(o+=u.CesiumMath.TWO_PI),s<h&&r<0?r+=u.CesiumMath.TWO_PI:o<r&&h<0&&(h+=u.CesiumMath.TWO_PI);var d=u.CesiumMath.negativePiToPi(Math.min(h,r)),l=u.CesiumMath.negativePiToPi(Math.max(s,o));return a.west=d,a.south=Math.min(t.south,e.south),a.east=l,a.north=Math.max(t.north,e.north),a},i.expand=function(t,e,a){return n.defined(a)||(a=new i),a.west=Math.min(t.west,e.longitude),a.south=Math.min(t.south,e.latitude),a.east=Math.max(t.east,e.longitude),a.north=Math.max(t.north,e.latitude),a},i.contains=function(t,e){var a=e.longitude,n=e.latitude,i=t.west,s=t.east;return s<i&&(s+=u.CesiumMath.TWO_PI,a<0&&(a+=u.CesiumMath.TWO_PI)),(a>i||u.CesiumMath.equalsEpsilon(a,i,u.CesiumMath.EPSILON14))&&(a<s||u.CesiumMath.equalsEpsilon(a,s,u.CesiumMath.EPSILON14))&&n>=t.south&&n<=t.north};var s=new e.Cartographic;i.subsample=function(t,a,h,o){a=n.defaultValue(a,e.Ellipsoid.WGS84),h=n.defaultValue(h,0),n.defined(o)||(o=[]);var r=0,d=t.north,l=t.south,m=t.east,M=t.west,f=s;f.height=h,f.longitude=M,f.latitude=d,o[r]=a.cartographicToCartesian(f,o[r]),r++,f.longitude=m,o[r]=a.cartographicToCartesian(f,o[r]),r++,f.latitude=l,o[r]=a.cartographicToCartesian(f,o[r]),r++,f.longitude=M,o[r]=a.cartographicToCartesian(f,o[r]),r++,f.latitude=d<0?d:l>0?l:0;for(var c=1;c<8;++c)f.longitude=-Math.PI+c*u.CesiumMath.PI_OVER_TWO,i.contains(t,f)&&(o[r]=a.cartographicToCartesian(f,o[r]),r++);return 0===f.latitude&&(f.longitude=M,o[r]=a.cartographicToCartesian(f,o[r]),r++,f.longitude=m,o[r]=a.cartographicToCartesian(f,o[r]),r++),o.length=r,o},i.MAX_VALUE=Object.freeze(new i(-Math.PI,-u.CesiumMath.PI_OVER_TWO,Math.PI,u.CesiumMath.PI_OVER_TWO)),t.Rectangle=i}));
