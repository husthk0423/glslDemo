define(["exports","./GeometryOffsetAttribute-0a70352a","./BoundingSphere-2b618cd6","./Cartesian2-cce28994","./ComponentDatatype-c1201c79","./defaultValue-81eec7ed","./Check-edea0f91","./GeometryAttribute-c4e682f4","./GeometryAttributes-32b29525","./IndexDatatype-2503dc5a","./Math-29cbc3fa"],(function(i,e,t,a,n,r,o,s,u,m,f){"use strict";var d=new a.Cartesian3(1,1,1),l=Math.cos,c=Math.sin;function C(i){i=r.defaultValue(i,r.defaultValue.EMPTY_OBJECT);var e=r.defaultValue(i.radii,d),t=r.defaultValue(i.innerRadii,e),n=r.defaultValue(i.minimumClock,0),o=r.defaultValue(i.maximumClock,f.CesiumMath.TWO_PI),s=r.defaultValue(i.minimumCone,0),u=r.defaultValue(i.maximumCone,f.CesiumMath.PI),m=Math.round(r.defaultValue(i.stackPartitions,10)),l=Math.round(r.defaultValue(i.slicePartitions,8)),c=Math.round(r.defaultValue(i.subdivisions,128));this._radii=a.Cartesian3.clone(e),this._innerRadii=a.Cartesian3.clone(t),this._minimumClock=n,this._maximumClock=o,this._minimumCone=s,this._maximumCone=u,this._stackPartitions=m,this._slicePartitions=l,this._subdivisions=c,this._offsetAttribute=i.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}C.packedLength=2*a.Cartesian3.packedLength+8,C.pack=function(i,e,t){return t=r.defaultValue(t,0),a.Cartesian3.pack(i._radii,e,t),t+=a.Cartesian3.packedLength,a.Cartesian3.pack(i._innerRadii,e,t),t+=a.Cartesian3.packedLength,e[t++]=i._minimumClock,e[t++]=i._maximumClock,e[t++]=i._minimumCone,e[t++]=i._maximumCone,e[t++]=i._stackPartitions,e[t++]=i._slicePartitions,e[t++]=i._subdivisions,e[t]=r.defaultValue(i._offsetAttribute,-1),e};var _=new a.Cartesian3,h=new a.Cartesian3,p={radii:_,innerRadii:h,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};C.unpack=function(i,e,t){e=r.defaultValue(e,0);var n=a.Cartesian3.unpack(i,e,_);e+=a.Cartesian3.packedLength;var o=a.Cartesian3.unpack(i,e,h);e+=a.Cartesian3.packedLength;var s=i[e++],u=i[e++],m=i[e++],f=i[e++],d=i[e++],l=i[e++],c=i[e++],v=i[e];return r.defined(t)?(t._radii=a.Cartesian3.clone(n,t._radii),t._innerRadii=a.Cartesian3.clone(o,t._innerRadii),t._minimumClock=s,t._maximumClock=u,t._minimumCone=m,t._maximumCone=f,t._stackPartitions=d,t._slicePartitions=l,t._subdivisions=c,t._offsetAttribute=-1===v?void 0:v,t):(p.minimumClock=s,p.maximumClock=u,p.minimumCone=m,p.maximumCone=f,p.stackPartitions=d,p.slicePartitions=l,p.subdivisions=c,p.offsetAttribute=-1===v?void 0:v,new C(p))},C.createGeometry=function(i){var o=i._radii;if(!(o.x<=0||o.y<=0||o.z<=0)){var d=i._innerRadii;if(!(d.x<=0||d.y<=0||d.z<=0)){var C=i._minimumClock,_=i._maximumClock,h=i._minimumCone,p=i._maximumCone,v=i._subdivisions,y=a.Ellipsoid.fromCartesian3(o),k=i._slicePartitions+1,b=i._stackPartitions+1;(k=Math.round(k*Math.abs(_-C)/f.CesiumMath.TWO_PI))<2&&(k=2),(b=Math.round(b*Math.abs(p-h)/f.CesiumMath.PI))<2&&(b=2);var A=0,x=1,P=d.x!==o.x||d.y!==o.y||d.z!==o.z,M=!1,w=!1;P&&(x=2,h>0&&(M=!0,A+=k),p<Math.PI&&(w=!0,A+=k));var V,g,G,E,O=v*x*(b+k),D=new Float64Array(3*O),I=2*(O+A-(k+b)*x),z=m.IndexDatatype.createTypedArray(O,I),L=0,T=new Array(b),R=new Array(b);for(V=0;V<b;V++)E=h+V*(p-h)/(b-1),T[V]=c(E),R[V]=l(E);var N=new Array(v),B=new Array(v);for(V=0;V<v;V++)G=C+V*(_-C)/(v-1),N[V]=c(G),B[V]=l(G);for(V=0;V<b;V++)for(g=0;g<v;g++)D[L++]=o.x*T[V]*B[g],D[L++]=o.y*T[V]*N[g],D[L++]=o.z*R[V];if(P)for(V=0;V<b;V++)for(g=0;g<v;g++)D[L++]=d.x*T[V]*B[g],D[L++]=d.y*T[V]*N[g],D[L++]=d.z*R[V];for(T.length=v,R.length=v,V=0;V<v;V++)E=h+V*(p-h)/(v-1),T[V]=c(E),R[V]=l(E);for(N.length=k,B.length=k,V=0;V<k;V++)G=C+V*(_-C)/(k-1),N[V]=c(G),B[V]=l(G);for(V=0;V<v;V++)for(g=0;g<k;g++)D[L++]=o.x*T[V]*B[g],D[L++]=o.y*T[V]*N[g],D[L++]=o.z*R[V];if(P)for(V=0;V<v;V++)for(g=0;g<k;g++)D[L++]=d.x*T[V]*B[g],D[L++]=d.y*T[V]*N[g],D[L++]=d.z*R[V];for(L=0,V=0;V<b*x;V++){var S=V*v;for(g=0;g<v-1;g++)z[L++]=S+g,z[L++]=S+g+1}var U=b*v*x;for(V=0;V<k;V++)for(g=0;g<v-1;g++)z[L++]=U+V+g*k,z[L++]=U+V+(g+1)*k;if(P)for(U=b*v*x+k*v,V=0;V<k;V++)for(g=0;g<v-1;g++)z[L++]=U+V+g*k,z[L++]=U+V+(g+1)*k;if(P){var F=b*v*x,W=F+v*k;if(M)for(V=0;V<k;V++)z[L++]=F+V,z[L++]=W+V;if(w)for(F+=v*k-k,W+=v*k-k,V=0;V<k;V++)z[L++]=F+V,z[L++]=W+V}var Y=new u.GeometryAttributes({position:new s.GeometryAttribute({componentDatatype:n.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:D})});if(r.defined(i._offsetAttribute)){var J=D.length,j=new Uint8Array(J/3),q=i._offsetAttribute===e.GeometryOffsetAttribute.NONE?0:1;e.arrayFill(j,q),Y.applyOffset=new s.GeometryAttribute({componentDatatype:n.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:j})}return new s.Geometry({attributes:Y,indices:z,primitiveType:s.PrimitiveType.LINES,boundingSphere:t.BoundingSphere.fromEllipsoid(y),offsetAttribute:i._offsetAttribute})}}},i.EllipsoidOutlineGeometry=C}));
