{"version":3,"file":"VectorWorker.js","sources":["../../../../Source/WorkersES6/VectorWorker.js"],"sourcesContent":["/**\r\n * Cesium - https://github.com/AnalyticalGraphicsInc/cesium\r\n *\r\n * Copyright 2011-2017 Cesium Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * Columbus View (Pat. Pend.)\r\n *\r\n * Portions licensed separately.\r\n * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.\r\n */\r\n\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\nimport Transforms from '../Core/Transforms.js';\r\nimport Resource from '../Core/Resource.js';\r\nimport Cartesian2 from '../Core/Cartesian2.js';\r\nimport Cartesian3 from '../Core/Cartesian3.js';\r\nimport VectorDrawer from './VectorDrawer.js';\r\nimport uncompress from './snappyJs.js';\r\n\r\nimport FillBucket from '../mapbox/data/bucket/FillBucket';\r\nimport LineBucket from '../mapbox/data/bucket/LineBucket';\r\nimport Simplify from '../util/Simplify';\r\nimport Point from '../mapbox/data/point';\r\nimport ColorUtil from './ColorUtil';\r\n\r\n\r\nlet styleFun = undefined;\r\nlet tileSize = 512;\r\nlet return_type = '';\r\nlet options = {};\r\n\r\n    /* global require */\r\n  function createGeometry(parameters, transferableObjects) {\r\n            //初始化\r\n            if(parameters.init ==true){\r\n                styleFun = new Function(\"drawer\",\"level\", parameters.styleStr);\r\n                tileSize = parameters.tileSize;\r\n                return_type = parameters.return_type;\r\n\r\n                options = parameters;\r\n                return true;\r\n            }\r\n\r\n            //更改样式\r\n            if(parameters.changeStyle == true){\r\n                let u8a = new Uint8Array(parameters.tileData);\r\n                let str =  bufToStr(u8a);\r\n                let data = JSON.parse(str);\r\n                let featureMap =  parseData(data,parameters);\r\n                return  createBuckets(featureMap,transferableObjects);\r\n            }\r\n\r\n\r\n            //初次请求url\r\n            var url = parameters.url;\r\n            var resource = new Resource({url:url});\r\n            resource.request.throttle = false;\r\n            resource.request.throttleByServer = true;\r\n            resource.request.type = 1;\r\n\r\n            var jsonPromise;\r\n            if(return_type == 'stream_snappy'){\r\n                jsonPromise = resource.fetchArrayBuffer();\r\n            }else{\r\n                jsonPromise = resource.fetchJson();\r\n            }\r\n            if(!jsonPromise){\r\n                return true;\r\n            }\r\n\r\n            return jsonPromise.then(function(data){\r\n                let tileData = null;\r\n                if(return_type == 'stream_snappy'){\r\n                    data = uncompress(data);\r\n                    transferableObjects.push(data);\r\n\r\n                    let u8a = new Uint8Array(data);\r\n                    tileData = u8a.buffer;\r\n                    let str =  bufToStr(u8a);\r\n                    data = JSON.parse(str);\r\n                }\r\n               let featureMap =  parseData(data,parameters);\r\n\r\n               let buckets =  createBuckets(featureMap,transferableObjects);\r\n               return {tileData:tileData,buckets:buckets}\r\n            });\r\n        }\r\n\r\n        function bufToStr(bytes){\r\n            let out = [], pos = 0,c =0;\r\n            while (pos < bytes.length) {\r\n                let c1 = bytes[pos++];\r\n                if (c1 < 128) {\r\n                    out[c++] = c1;\r\n                } else if (c1 > 191 && c1 < 224) {\r\n                    let c2 = bytes[pos++];\r\n                    out[c++] = (c1 & 31) << 6 | c2 & 63;\r\n                } else if (c1 > 239 && c1 < 365) {\r\n                    // Surrogate Pair\r\n                    let c2 = bytes[pos++];\r\n                    let c3 = bytes[pos++];\r\n                    let c4 = bytes[pos++];\r\n                    let u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) -\r\n                        0x10000;\r\n                    out[c++] = 0xD800 + (u >> 10);\r\n                    out[c++] = 0xDC00 + (u & 1023);\r\n                } else {\r\n                    let c2 = bytes[pos++];\r\n                    let c3 = bytes[pos++];\r\n                    out[c++] = (c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63;\r\n                }\r\n            }\r\n\r\n            let a = [];\r\n            let i = 0,offer=0,length=0;\r\n            let count = 50000;\r\n            let size = (out.length /  count) - 1;\r\n            for(i = 0 ; i < size; i ++){\r\n                offer = i * count;\r\n                length = (i + 1) * count;\r\n                a.push(String.fromCharCode.apply({},out.slice(offer,length)));\r\n            }\r\n            offer = i * count;\r\n            length = out.length;\r\n            a.push(String.fromCharCode.apply({},out.slice(offer,length)));\r\n\r\n            a = a.join('');\r\n            return a;\r\n        }\r\n\r\n        function parseData(data,parameters){\r\n            if(data && data.layer){\r\n                data = data.layer;\r\n                decodeData(data,parameters.needDecode);\r\n                //设置样式\r\n                let featureMap = {};\r\n                let drawer = new VectorDrawer([data], parameters.level, featureMap,parameters.controlVector,\r\n                    parameters.highLightVector,parameters.filterLayerId);\r\n                styleFun.call({}, drawer, parameters.level);\r\n                return featureMap;\r\n            }\r\n            return {};\r\n        }\r\n\r\n        /**\r\n         *  解码数据，包括点坐标偏移，正方形F的解码等\r\n         * @param data\r\n         */\r\n        function decodeData(data,needDecode){\r\n            for(let layername in data){\r\n                let features = data[layername].features;\r\n                if(!features){\r\n                    features = data[layername].datas;\r\n                }\r\n                for(let i = 0;i<features.length;i++){\r\n                    recursiveDecode(features[i][2],needDecode);\r\n                }\r\n            }\r\n        }\r\n\r\n        function recursiveDecode(components,needDecode){\r\n            if(components[0] == 'F'){\r\n                components[0] = formatF();\r\n                return;\r\n            }\r\n\r\n            if (Array.isArray(components[0])) {\r\n                let len = components.length;\r\n                for (let i = 0; i < len; i++) {\r\n                    let component = components[i];\r\n                    recursiveDecode(component,needDecode);\r\n                }\r\n            } else {\r\n                if(needDecode){\r\n                    recoveryData(components);\r\n                }\r\n            }\r\n        }\r\n\r\n        function recoveryData(components){\r\n            let prevPoint = [components[0],components[1]];\r\n            for(let j =2;j<components.length;j++){\r\n                let x = prevPoint[0]+components[j];\r\n                let y = prevPoint[1]+components[j+1];\r\n                components[j] = x;\r\n                components[j+1] = y;\r\n                prevPoint = [x,y];\r\n                j++;\r\n            }\r\n        }\r\n\r\n        function formatF(){\r\n            return [-tileSize*0.05,-tileSize*0.05,tileSize*1.05,-tileSize*0.05,\r\n                tileSize*1.05,tileSize*1.05,-tileSize*0.05,tileSize*1.05];\r\n        }\r\n\r\n\r\n        function createBuckets(featureMap,transferableObjects){\r\n            let buckets = [];\r\n            for(let i =0;i<featureMap.keyArr.length;i++){\r\n                let styleKey = featureMap.keyArr[i];\r\n                let styleFeature = featureMap[styleKey];\r\n                let style = styleFeature.style;\r\n                formatStyleColor(style);\r\n\r\n                if(styleFeature.lineFeatues.length > 0){\r\n                    let lineBucket = new LineBucket({style:style,type:'line',tileSize:tileSize});\r\n                    for (let feature of styleFeature.lineFeatues) {\r\n                        //抽稀\r\n                        sparsityFeature(feature,style,false);\r\n                        //坐标转换\r\n                        let featureGeometry = formatGeometry(feature);\r\n                        lineBucket.addFeature(featureGeometry);\r\n                    }\r\n                    lineBucket = lineBucket.serialize(transferableObjects);\r\n                    buckets.push(lineBucket);\r\n                    continue;\r\n                }\r\n                if(styleFeature.fillFeatures.length > 0){\r\n                    let fillBucket = new FillBucket({style:style,type:'fill',tileSize:tileSize});\r\n                    //面边线\r\n                    let lineBucket = new LineBucket({style:style,type:'line',tileSize:tileSize});\r\n                    for (let feature of styleFeature.fillFeatures) {\r\n                        //抽稀\r\n                        sparsityFeature(feature,style,true);\r\n                        //坐标转换\r\n                        let featureGeometry = formatGeometry(feature);\r\n                        fillBucket.addFeature(featureGeometry);\r\n\r\n                        if(style.stroke){\r\n                            lineBucket.addFeature(featureGeometry);\r\n                        }\r\n                    }\r\n\r\n                    fillBucket = fillBucket.serialize(transferableObjects);\r\n                    buckets.push(fillBucket);\r\n\r\n                    if(style.stroke){\r\n                        lineBucket = lineBucket.serialize(transferableObjects);\r\n                        buckets.push(lineBucket);\r\n                    }\r\n                }\r\n            }\r\n            return buckets;\r\n        }\r\n\r\n        function sparsityFeature(feature,style,close){\r\n            if(!style.sparsity){\r\n                return;\r\n            }\r\n            let sparsity = parseFloat(style.sparsity);\r\n            for(let i = 0;i<feature.data.length;i++){\r\n                let points = feature.data[i];\r\n                if (sparsity != null || sparsity != 1) {\r\n                    feature.data[i] = Simplify(points, sparsity / 4, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        function formatGeometry(feature){\r\n            let n  = 256/tileSize*32;\r\n            let geometry = [];\r\n            for(let i = 0;i<feature.data.length;i++){\r\n                geometry[i] = [];\r\n                let ring = feature.data[i];\r\n                for(let j =0;j<ring.length;j++){\r\n                    if(j%2 == 0){\r\n                        let x = ring[j]*n;\r\n                        let y = ring[j+1]*n;\r\n                        geometry[i].push(new Point(x,y));\r\n                    }\r\n                }\r\n            }\r\n\r\n            return geometry;\r\n        }\r\n\r\n    function formatStyleColor(style){\r\n        let color = new ColorUtil();\r\n        if(style.fillColor){\r\n            color.fromHex(style.fillColor);\r\n            let fillColor = [color.rgb[0]/255.0,color.rgb[1]/255.0,color.rgb[2]/255.0,1.0];\r\n            style.fillColor = fillColor;\r\n        }\r\n\r\n        if(style.strokeColor){\r\n            color = new ColorUtil();\r\n            color.fromHex(style.strokeColor);\r\n            let strokeColor = [color.rgb[0]/255.0,color.rgb[1]/255.0,color.rgb[2]/255.0,1.0];\r\n            style.strokeColor = strokeColor;\r\n        }\r\n    }\r\n\r\n    var result = createTaskProcessorWorker(createGeometry);\r\n    export default result;"],"names":["Resource","uncompress","LineBucket","FillBucket","Simplify","Point"],"mappings":"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"}