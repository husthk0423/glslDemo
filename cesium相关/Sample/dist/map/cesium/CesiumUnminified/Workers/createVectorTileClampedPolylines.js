define(["./AttributeCompression-dc008507","./Cartesian2-cce28994","./combine-0897f2e3","./IndexDatatype-2503dc5a","./Math-29cbc3fa","./Rectangle-1bad9972","./createTaskProcessorWorker","./ComponentDatatype-c1201c79","./defaultValue-81eec7ed","./Check-edea0f91","./WebGLConstants-1c8239cc","./Matrix4-da4bb68c","./RuntimeError-94b0bf5f","./Matrix2-c857e514","./when-422ea0ae"],(function(a,e,t,r,s,n,i,o,d,c,f,l,h,u,C){"use strict";var p=32767,v=Math.cos(s.CesiumMath.toRadians(150)),m=new e.Cartographic,b=new e.Cartesian3;var A=new e.Cartographic,w=new e.Cartographic;function g(a){var e=8*a,t=3*e,s=4*e;this.startEllipsoidNormals=new Float32Array(t),this.endEllipsoidNormals=new Float32Array(t),this.startPositionAndHeights=new Float32Array(s),this.startFaceNormalAndVertexCornerIds=new Float32Array(s),this.endPositionAndHeights=new Float32Array(s),this.endFaceNormalAndHalfWidths=new Float32Array(s),this.vertexBatchIds=new Uint16Array(e),this.indices=r.IndexDatatype.createTypedArray(e,36*a),this.vec3Offset=0,this.vec4Offset=0,this.batchIdOffset=0,this.indexOffset=0,this.volumeStartIndex=0}var y=new e.Cartesian3,N=new e.Cartesian3;function k(a,t,r,s,n){var i=e.Cartesian3.subtract(r,t,N),o=e.Cartesian3.subtract(t,a,y);return e.Cartesian3.normalize(i,i),e.Cartesian3.normalize(o,o),e.Cartesian3.dot(i,o)<v&&(o=e.Cartesian3.multiplyByScalar(o,-1,y)),e.Cartesian3.add(i,o,n),e.Cartesian3.equals(n,e.Cartesian3.ZERO)&&(n=e.Cartesian3.subtract(a,t)),e.Cartesian3.cross(n,s,n),e.Cartesian3.cross(s,n,n),e.Cartesian3.normalize(n,n),n}var x=[0,2,6,0,6,4,0,1,3,0,3,2,0,4,5,0,5,1,5,3,1,5,7,3,7,5,4,7,4,6,7,6,2,7,2,3],I=x.length,E=new e.Cartesian3,F=new e.Cartesian3,H=new e.Cartesian3,O=new e.Cartesian3,P=new e.Cartesian3;g.prototype.addVolume=function(a,t,r,s,n,i,o,d,c,f){var l=e.Cartesian3.add(t,c,E),h=f.geodeticSurfaceNormal(l,F);l=e.Cartesian3.add(r,c,E);var u,C=f.geodeticSurfaceNormal(l,O),p=k(a,t,r,h,H),v=k(s,r,t,C,P),m=this.startEllipsoidNormals,b=this.endEllipsoidNormals,A=this.startPositionAndHeights,w=this.startFaceNormalAndVertexCornerIds,g=this.endPositionAndHeights,y=this.endFaceNormalAndHalfWidths,N=this.vertexBatchIds,D=this.batchIdOffset,M=this.vec3Offset,R=this.vec4Offset;for(u=0;u<8;u++)e.Cartesian3.pack(h,m,M),e.Cartesian3.pack(C,b,M),e.Cartesian3.pack(t,A,R),A[R+3]=n,e.Cartesian3.pack(r,g,R),g[R+3]=i,e.Cartesian3.pack(p,w,R),w[R+3]=u,e.Cartesian3.pack(v,y,R),y[R+3]=o,N[D++]=d,M+=3,R+=4;this.batchIdOffset=D,this.vec3Offset=M,this.vec4Offset=R;var S=this.indices,U=this.volumeStartIndex,B=this.indexOffset;for(u=0;u<I;u++)S[B+u]=x[u]+U;this.volumeStartIndex+=8,this.indexOffset+=I};var D=new n.Rectangle,M=new e.Ellipsoid,R=new e.Cartesian3,S=new e.Cartesian3,U=new e.Cartesian3,B=new e.Cartesian3,V=new e.Cartesian3;return i((function(i,o){var d,c=new Uint16Array(i.positions),f=new Uint16Array(i.widths),l=new Uint32Array(i.counts),h=new Uint16Array(i.batchIds),u=D,C=M,v=R,y=new Float64Array(i.packedBuffer),N=0,k=y[N++],x=y[N++];n.Rectangle.unpack(y,N,u),N+=n.Rectangle.packedLength,e.Ellipsoid.unpack(y,N,C),N+=e.Ellipsoid.packedLength,e.Cartesian3.unpack(y,N,v);var I=c.length/3,E=c.subarray(0,I),F=c.subarray(I,2*I),H=c.subarray(2*I,3*I);a.AttributeCompression.zigZagDeltaDecode(E,F,H),function(a,t,r,s){for(var n=s.length,i=a.length,o=new Uint8Array(i),d=A,c=w,f=0,l=0;l<n;l++){for(var h=s[l],u=h,C=1;C<h;C++){var p=f+C,v=p-1;c.longitude=a[p],c.latitude=t[p],d.longitude=a[v],d.latitude=t[v],e.Cartographic.equals(c,d)&&(u--,o[v]=1)}s[l]=u,f+=h}for(var m=0,b=0;b<i;b++)1!==o[b]&&(a[m]=a[b],t[m]=t[b],r[m]=r[b],m++)}(E,F,H,l);var O=l.length,P=0;for(d=0;d<O;d++){P+=l[d]-1}var T=new g(P),W=function(a,t,r,n,i,o,d){for(var c=a.length,f=new Float64Array(3*c),l=0;l<c;++l){var h=a[l],u=t[l],C=r[l],v=s.CesiumMath.lerp(n.west,n.east,h/p),A=s.CesiumMath.lerp(n.south,n.north,u/p),w=s.CesiumMath.lerp(i,o,C/p),g=e.Cartographic.fromRadians(v,A,w,m),y=d.cartographicToCartesian(g,b);e.Cartesian3.pack(y,f,3*l)}return f}(E,F,H,u,k,x,C);I=E.length;var z=new Float32Array(3*I);for(d=0;d<I;++d)z[3*d]=W[3*d]-v.x,z[3*d+1]=W[3*d+1]-v.y,z[3*d+2]=W[3*d+2]-v.z;var q=0,L=0;for(d=0;d<O;d++){for(var _=l[d]-1,G=.5*f[d],Z=h[d],Y=q,j=0;j<_;j++){var J=e.Cartesian3.unpack(z,q,U),K=e.Cartesian3.unpack(z,q+3,B),Q=H[L],X=H[L+1];Q=s.CesiumMath.lerp(k,x,Q/p),X=s.CesiumMath.lerp(k,x,X/p),L++;var $=S,aa=V;if(0===j){var ea=Y+3*_,ta=e.Cartesian3.unpack(z,ea,S);if(e.Cartesian3.equals(ta,J))e.Cartesian3.unpack(z,ea-3,$);else{var ra=e.Cartesian3.subtract(J,K,S);$=e.Cartesian3.add(ra,J,S)}}else e.Cartesian3.unpack(z,q-3,$);if(j===_-1){var sa=e.Cartesian3.unpack(z,Y,V);if(e.Cartesian3.equals(sa,K))e.Cartesian3.unpack(z,Y+3,aa);else{var na=e.Cartesian3.subtract(K,J,V);aa=e.Cartesian3.add(na,K,V)}}else e.Cartesian3.unpack(z,q+6,aa);T.addVolume($,J,K,aa,Q,X,G,Z,v,C),q+=3}q+=3,L++}var ia=T.indices;o.push(T.startEllipsoidNormals.buffer),o.push(T.endEllipsoidNormals.buffer),o.push(T.startPositionAndHeights.buffer),o.push(T.startFaceNormalAndVertexCornerIds.buffer),o.push(T.endPositionAndHeights.buffer),o.push(T.endFaceNormalAndHalfWidths.buffer),o.push(T.vertexBatchIds.buffer),o.push(ia.buffer);var oa={indexDatatype:2===ia.BYTES_PER_ELEMENT?r.IndexDatatype.UNSIGNED_SHORT:r.IndexDatatype.UNSIGNED_INT,startEllipsoidNormals:T.startEllipsoidNormals.buffer,endEllipsoidNormals:T.endEllipsoidNormals.buffer,startPositionAndHeights:T.startPositionAndHeights.buffer,startFaceNormalAndVertexCornerIds:T.startFaceNormalAndVertexCornerIds.buffer,endPositionAndHeights:T.endPositionAndHeights.buffer,endFaceNormalAndHalfWidths:T.endFaceNormalAndHalfWidths.buffer,vertexBatchIds:T.vertexBatchIds.buffer,indices:ia.buffer};if(i.keepDecodedPositions){var da=function(a){for(var e=a.length,t=new Uint32Array(e+1),r=0,s=0;s<e;++s)t[s]=r,r+=a[s];return t[e]=r,t}(l);o.push(W.buffer,da.buffer),oa=t.combine(oa,{decodedPositions:W.buffer,decodedPositionOffsets:da.buffer})}return oa}))}));
