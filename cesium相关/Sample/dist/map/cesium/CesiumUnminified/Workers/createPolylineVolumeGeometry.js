define(["./defaultValue-81eec7ed","./Cartesian2-cce28994","./arrayRemoveDuplicates-9a47c9b6","./BoundingRectangle-01a4d1a7","./BoundingSphere-2b618cd6","./ComponentDatatype-c1201c79","./PolylineVolumeGeometryLibrary-58345cc1","./Check-edea0f91","./GeometryAttribute-c4e682f4","./GeometryAttributes-32b29525","./GeometryPipeline-b8be120b","./IndexDatatype-2503dc5a","./Math-29cbc3fa","./PolygonPipeline-8ba20582","./VertexFormat-aef87cc2","./GeographicProjection-54ec8d9d","./Rectangle-1bad9972","./Matrix4-da4bb68c","./RuntimeError-94b0bf5f","./WebGLConstants-1c8239cc","./EllipsoidTangentPlane-3ee186ca","./AxisAlignedBoundingBox-a270696e","./IntersectionTests-878c0e54","./Plane-d04f021c","./Transforms-599d3866","./when-422ea0ae","./Resource-721e53e7","./combine-0897f2e3","./PolylinePipeline-f785d88a","./EllipsoidGeodesic-bc3178c0","./EllipsoidRhumbLine-52cdeee5","./Matrix2-c857e514","./AttributeCompression-dc008507","./EncodedCartesian3-d8b5d6fd"],(function(e,t,n,a,r,i,o,l,s,p,c,d,u,m,y,g,h,f,v,b,P,E,_,k,C,V,x,L,F,A,G,T,D,R){"use strict";function w(n){var a=(n=e.defaultValue(n,e.defaultValue.EMPTY_OBJECT)).polylinePositions,r=n.shapePositions;this._positions=a,this._shape=r,this._ellipsoid=t.Ellipsoid.clone(e.defaultValue(n.ellipsoid,t.Ellipsoid.WGS84)),this._cornerType=e.defaultValue(n.cornerType,o.CornerType.ROUNDED),this._vertexFormat=y.VertexFormat.clone(e.defaultValue(n.vertexFormat,y.VertexFormat.DEFAULT)),this._granularity=e.defaultValue(n.granularity,u.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeGeometry";var i=1+a.length*t.Cartesian3.packedLength;i+=1+r.length*t.Cartesian2.packedLength,this.packedLength=i+t.Ellipsoid.packedLength+y.VertexFormat.packedLength+2}w.pack=function(n,a,r){var i;r=e.defaultValue(r,0);var o=n._positions,l=o.length;for(a[r++]=l,i=0;i<l;++i,r+=t.Cartesian3.packedLength)t.Cartesian3.pack(o[i],a,r);var s=n._shape;for(l=s.length,a[r++]=l,i=0;i<l;++i,r+=t.Cartesian2.packedLength)t.Cartesian2.pack(s[i],a,r);return t.Ellipsoid.pack(n._ellipsoid,a,r),r+=t.Ellipsoid.packedLength,y.VertexFormat.pack(n._vertexFormat,a,r),r+=y.VertexFormat.packedLength,a[r++]=n._cornerType,a[r]=n._granularity,a};var B=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),S=new y.VertexFormat,I={polylinePositions:void 0,shapePositions:void 0,ellipsoid:B,vertexFormat:S,cornerType:void 0,granularity:void 0};w.unpack=function(n,a,r){var i;a=e.defaultValue(a,0);var o=n[a++],l=new Array(o);for(i=0;i<o;++i,a+=t.Cartesian3.packedLength)l[i]=t.Cartesian3.unpack(n,a);o=n[a++];var s=new Array(o);for(i=0;i<o;++i,a+=t.Cartesian2.packedLength)s[i]=t.Cartesian2.unpack(n,a);var p=t.Ellipsoid.unpack(n,a,B);a+=t.Ellipsoid.packedLength;var c=y.VertexFormat.unpack(n,a,S);a+=y.VertexFormat.packedLength;var d=n[a++],u=n[a];return e.defined(r)?(r._positions=l,r._shape=s,r._ellipsoid=t.Ellipsoid.clone(p,r._ellipsoid),r._vertexFormat=y.VertexFormat.clone(c,r._vertexFormat),r._cornerType=d,r._granularity=u,r):(I.polylinePositions=l,I.shapePositions=s,I.cornerType=d,I.granularity=u,new w(I))};var O=new a.BoundingRectangle;return w.createGeometry=function(e){var l=e._positions,u=n.arrayRemoveDuplicates(l,t.Cartesian3.equalsEpsilon),y=e._shape;if(y=o.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(y),!(u.length<2||y.length<3)){m.PolygonPipeline.computeWindingOrder2D(y)===m.WindingOrder.CLOCKWISE&&y.reverse();var g=a.BoundingRectangle.fromPoints(y,O);return function(e,t,n,a){var l=new p.GeometryAttributes;a.position&&(l.position=new s.GeometryAttribute({componentDatatype:i.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e}));var u,y,g,h,f,v,b=t.length,P=e.length/3,E=(P-2*b)/(2*b),_=m.PolygonPipeline.triangulate(t),k=(E-1)*b*6+2*_.length,C=d.IndexDatatype.createTypedArray(P,k),V=2*b,x=0;for(u=0;u<E-1;u++){for(y=0;y<b-1;y++)v=(g=2*y+u*b*2)+V,f=(h=g+1)+V,C[x++]=h,C[x++]=g,C[x++]=f,C[x++]=f,C[x++]=g,C[x++]=v;f=(h=1+(g=2*b-2+u*b*2))+V,v=g+V,C[x++]=h,C[x++]=g,C[x++]=f,C[x++]=f,C[x++]=g,C[x++]=v}if(a.st||a.tangent||a.bitangent){var L,F,A=new Float32Array(2*P),G=1/(E-1),T=1/n.height,D=n.height/2,R=0;for(u=0;u<E;u++){for(L=u*G,F=T*(t[0].y+D),A[R++]=L,A[R++]=F,y=1;y<b;y++)F=T*(t[y].y+D),A[R++]=L,A[R++]=F,A[R++]=L,A[R++]=F;F=T*(t[0].y+D),A[R++]=L,A[R++]=F}for(y=0;y<b;y++)L=0,F=T*(t[y].y+D),A[R++]=L,A[R++]=F;for(y=0;y<b;y++)L=(E-1)*G,F=T*(t[y].y+D),A[R++]=L,A[R++]=F;l.st=new s.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:new Float32Array(A)})}var w=P-2*b;for(u=0;u<_.length;u+=3){var B=_[u]+w,S=_[u+1]+w,I=_[u+2]+w;C[x++]=B,C[x++]=S,C[x++]=I,C[x++]=I+b,C[x++]=S+b,C[x++]=B+b}var O=new s.Geometry({attributes:l,indices:C,boundingSphere:r.BoundingSphere.fromVertices(e),primitiveType:s.PrimitiveType.TRIANGLES});if(a.normal&&(O=c.GeometryPipeline.computeNormal(O)),a.tangent||a.bitangent){try{O=c.GeometryPipeline.computeTangentAndBitangent(O)}catch(e){o.oneTimeWarning("polyline-volume-tangent-bitangent","Unable to compute tangents and bitangents for polyline volume geometry")}a.tangent||(O.attributes.tangent=void 0),a.bitangent||(O.attributes.bitangent=void 0),a.st||(O.attributes.st=void 0)}return O}(o.PolylineVolumeGeometryLibrary.computePositions(u,y,g,e,!0),y,g,e._vertexFormat)}},function(n,a){return e.defined(a)&&(n=w.unpack(n,a)),n._ellipsoid=t.Ellipsoid.clone(n._ellipsoid),w.createGeometry(n)}}));
