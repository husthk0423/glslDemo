define(["exports","./Cartesian2-cce28994","./Check-edea0f91","./defaultValue-81eec7ed","./Matrix2-c857e514","./Matrix4-da4bb68c","./WebGLConstants-1c8239cc","./Transforms-599d3866","./Rectangle-1bad9972"],(function(t,e,a,r,n,i,o,s,u){"use strict";var I=Object.freeze({NONE:0,TRIANGLES:1,LINES:2,POLYLINES:3}),N={POINTS:o.WebGLConstants.POINTS,LINES:o.WebGLConstants.LINES,LINE_LOOP:o.WebGLConstants.LINE_LOOP,LINE_STRIP:o.WebGLConstants.LINE_STRIP,TRIANGLES:o.WebGLConstants.TRIANGLES,TRIANGLE_STRIP:o.WebGLConstants.TRIANGLE_STRIP,TRIANGLE_FAN:o.WebGLConstants.TRIANGLE_FAN,validate:function(t){return t===N.POINTS||t===N.LINES||t===N.LINE_LOOP||t===N.LINE_STRIP||t===N.TRIANGLES||t===N.TRIANGLE_STRIP||t===N.TRIANGLE_FAN}},c=Object.freeze(N);function l(t){t=r.defaultValue(t,r.defaultValue.EMPTY_OBJECT),this.attributes=t.attributes,this.indices=t.indices,this.primitiveType=r.defaultValue(t.primitiveType,c.TRIANGLES),this.boundingSphere=t.boundingSphere,this.geometryType=r.defaultValue(t.geometryType,I.NONE),this.boundingSphereCV=t.boundingSphereCV,this.offsetAttribute=t.offsetAttribute}l.computeNumberOfVertices=function(t){var e=-1;for(var a in t.attributes)if(t.attributes.hasOwnProperty(a)&&r.defined(t.attributes[a])&&r.defined(t.attributes[a].values)){var n=t.attributes[a];e=n.values.length/n.componentsPerAttribute}return e};var T=new e.Cartographic,p=new e.Cartesian3,b=new i.Matrix4,f=[new e.Cartographic,new e.Cartographic,new e.Cartographic],m=[new e.Cartesian2,new e.Cartesian2,new e.Cartesian2],y=[new e.Cartesian2,new e.Cartesian2,new e.Cartesian2],C=new e.Cartesian3,E=new s.Quaternion,L=new i.Matrix4,d=new n.Matrix2;l._textureCoordinateRotationPoints=function(t,a,r,o){var I,N=u.Rectangle.center(o,T),c=e.Cartographic.toCartesian(N,r,p),l=s.Transforms.eastNorthUpToFixedFrame(c,r,b),h=i.Matrix4.inverse(l,b),x=m,A=f;A[0].longitude=o.west,A[0].latitude=o.south,A[1].longitude=o.west,A[1].latitude=o.north,A[2].longitude=o.east,A[2].latitude=o.south;var P=C;for(I=0;I<3;I++)e.Cartographic.toCartesian(A[I],r,P),P=i.Matrix4.multiplyByPointAsVector(h,P,P),x[I].x=P.x,x[I].y=P.y;var S=s.Quaternion.fromAxisAngle(e.Cartesian3.UNIT_Z,-a,E),G=i.Matrix3.fromQuaternion(S,L),v=t.length,R=Number.POSITIVE_INFINITY,g=Number.POSITIVE_INFINITY,w=Number.NEGATIVE_INFINITY,O=Number.NEGATIVE_INFINITY;for(I=0;I<v;I++)P=i.Matrix4.multiplyByPointAsVector(h,t[I],P),P=i.Matrix3.multiplyByVector(G,P,P),R=Math.min(R,P.x),g=Math.min(g,P.y),w=Math.max(w,P.x),O=Math.max(O,P.y);var _=n.Matrix2.fromRotation(a,d),V=y;V[0].x=R,V[0].y=g,V[1].x=R,V[1].y=O,V[2].x=w,V[2].y=g;var M=x[0],F=x[2].x-M.x,W=x[1].y-M.y;for(I=0;I<3;I++){var Y=V[I];n.Matrix2.multiplyByVector(_,Y,Y),Y.x=(Y.x-M.x)/F,Y.y=(Y.y-M.y)/W}var B=V[0],k=V[1],z=V[2],Q=new Array(6);return e.Cartesian2.pack(B,Q),e.Cartesian2.pack(k,Q,2),e.Cartesian2.pack(z,Q,4),Q},t.Geometry=l,t.GeometryAttribute=function(t){t=r.defaultValue(t,r.defaultValue.EMPTY_OBJECT),this.componentDatatype=t.componentDatatype,this.componentsPerAttribute=t.componentsPerAttribute,this.normalize=r.defaultValue(t.normalize,!1),this.values=t.values},t.GeometryType=I,t.PrimitiveType=c}));
