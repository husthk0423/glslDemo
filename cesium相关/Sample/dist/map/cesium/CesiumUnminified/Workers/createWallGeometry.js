define(["./defaultValue-81eec7ed","./Cartesian2-cce28994","./BoundingSphere-2b618cd6","./ComponentDatatype-c1201c79","./Check-edea0f91","./GeometryAttribute-c4e682f4","./GeometryAttributes-32b29525","./IndexDatatype-2503dc5a","./Math-29cbc3fa","./VertexFormat-aef87cc2","./WallGeometryLibrary-44afdb82","./GeographicProjection-54ec8d9d","./Matrix4-da4bb68c","./RuntimeError-94b0bf5f","./Rectangle-1bad9972","./WebGLConstants-1c8239cc","./Matrix2-c857e514","./Transforms-599d3866","./when-422ea0ae","./Resource-721e53e7","./combine-0897f2e3","./arrayRemoveDuplicates-9a47c9b6","./PolylinePipeline-f785d88a","./EllipsoidGeodesic-bc3178c0","./EllipsoidRhumbLine-52cdeee5","./IntersectionTests-878c0e54","./Plane-d04f021c"],(function(e,t,a,i,r,n,o,s,m,l,u,d,p,c,f,y,g,h,v,C,b,x,A,_,E,w,F){"use strict";var L=new t.Cartesian3,k=new t.Cartesian3,V=new t.Cartesian3,G=new t.Cartesian3,H=new t.Cartesian3,P=new t.Cartesian3,D=new t.Cartesian3;function T(a){var i=(a=e.defaultValue(a,e.defaultValue.EMPTY_OBJECT)).positions,r=a.maximumHeights,n=a.minimumHeights,o=e.defaultValue(a.vertexFormat,l.VertexFormat.DEFAULT),s=e.defaultValue(a.granularity,m.CesiumMath.RADIANS_PER_DEGREE),u=e.defaultValue(a.ellipsoid,t.Ellipsoid.WGS84);this._positions=i,this._minimumHeights=n,this._maximumHeights=r,this._vertexFormat=l.VertexFormat.clone(o),this._granularity=s,this._ellipsoid=t.Ellipsoid.clone(u),this._workerName="createWallGeometry";var d=1+i.length*t.Cartesian3.packedLength+2;e.defined(n)&&(d+=n.length),e.defined(r)&&(d+=r.length),this.packedLength=d+t.Ellipsoid.packedLength+l.VertexFormat.packedLength+1}T.pack=function(a,i,r){var n;r=e.defaultValue(r,0);var o=a._positions,s=o.length;for(i[r++]=s,n=0;n<s;++n,r+=t.Cartesian3.packedLength)t.Cartesian3.pack(o[n],i,r);var m=a._minimumHeights;if(s=e.defined(m)?m.length:0,i[r++]=s,e.defined(m))for(n=0;n<s;++n)i[r++]=m[n];var u=a._maximumHeights;if(s=e.defined(u)?u.length:0,i[r++]=s,e.defined(u))for(n=0;n<s;++n)i[r++]=u[n];return t.Ellipsoid.pack(a._ellipsoid,i,r),r+=t.Ellipsoid.packedLength,l.VertexFormat.pack(a._vertexFormat,i,r),i[r+=l.VertexFormat.packedLength]=a._granularity,i};var z=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),R=new l.VertexFormat,O={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:z,vertexFormat:R,granularity:void 0};return T.unpack=function(a,i,r){var n;i=e.defaultValue(i,0);var o,s,m=a[i++],u=new Array(m);for(n=0;n<m;++n,i+=t.Cartesian3.packedLength)u[n]=t.Cartesian3.unpack(a,i);if((m=a[i++])>0)for(o=new Array(m),n=0;n<m;++n)o[n]=a[i++];if((m=a[i++])>0)for(s=new Array(m),n=0;n<m;++n)s[n]=a[i++];var d=t.Ellipsoid.unpack(a,i,z);i+=t.Ellipsoid.packedLength;var p=l.VertexFormat.unpack(a,i,R),c=a[i+=l.VertexFormat.packedLength];return e.defined(r)?(r._positions=u,r._minimumHeights=o,r._maximumHeights=s,r._ellipsoid=t.Ellipsoid.clone(d,r._ellipsoid),r._vertexFormat=l.VertexFormat.clone(p,r._vertexFormat),r._granularity=c,r):(O.positions=u,O.minimumHeights=o,O.maximumHeights=s,O.granularity=c,new T(O))},T.fromConstantHeights=function(t){var a,i,r=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions,n=t.minimumHeight,o=t.maximumHeight,s=e.defined(n),m=e.defined(o);if(s||m){var l=r.length;a=s?new Array(l):void 0,i=m?new Array(l):void 0;for(var u=0;u<l;++u)s&&(a[u]=n),m&&(i[u]=o)}return new T({positions:r,maximumHeights:i,minimumHeights:a,ellipsoid:t.ellipsoid,vertexFormat:t.vertexFormat})},T.createGeometry=function(r){var l=r._positions,d=r._minimumHeights,p=r._maximumHeights,c=r._vertexFormat,f=r._granularity,y=r._ellipsoid,g=u.WallGeometryLibrary.computePositions(y,l,p,d,f,!0);if(e.defined(g)){var h,v=g.bottomPositions,C=g.topPositions,b=g.numCorners,x=C.length,A=2*x,_=c.position?new Float64Array(A):void 0,E=c.normal?new Float32Array(A):void 0,w=c.tangent?new Float32Array(A):void 0,F=c.bitangent?new Float32Array(A):void 0,T=c.st?new Float32Array(A/3*2):void 0,z=0,R=0,O=0,S=0,I=0,M=D,N=P,B=H,W=!0,U=0,q=1/((x/=3)-b-1);for(h=0;h<x;++h){var J=3*h,Y=t.Cartesian3.fromArray(C,J,L),j=t.Cartesian3.fromArray(v,J,k);if(c.position&&(_[z++]=j.x,_[z++]=j.y,_[z++]=j.z,_[z++]=Y.x,_[z++]=Y.y,_[z++]=Y.z),c.st&&(T[I++]=U,T[I++]=0,T[I++]=U,T[I++]=1),c.normal||c.tangent||c.bitangent){var Z=t.Cartesian3.clone(t.Cartesian3.ZERO,G),K=t.Cartesian3.subtract(Y,y.geodeticSurfaceNormal(Y,k),k);if(h+1<x&&(Z=t.Cartesian3.fromArray(C,J+3,G)),W){var Q=t.Cartesian3.subtract(Z,Y,V),X=t.Cartesian3.subtract(K,Y,L);M=t.Cartesian3.normalize(t.Cartesian3.cross(X,Q,M),M),W=!1}t.Cartesian3.equalsEpsilon(Y,Z,m.CesiumMath.EPSILON10)?W=!0:(U+=q,c.tangent&&(N=t.Cartesian3.normalize(t.Cartesian3.subtract(Z,Y,N),N)),c.bitangent&&(B=t.Cartesian3.normalize(t.Cartesian3.cross(M,N,B),B))),c.normal&&(E[R++]=M.x,E[R++]=M.y,E[R++]=M.z,E[R++]=M.x,E[R++]=M.y,E[R++]=M.z),c.tangent&&(w[S++]=N.x,w[S++]=N.y,w[S++]=N.z,w[S++]=N.x,w[S++]=N.y,w[S++]=N.z),c.bitangent&&(F[O++]=B.x,F[O++]=B.y,F[O++]=B.z,F[O++]=B.x,F[O++]=B.y,F[O++]=B.z)}}var $=new o.GeometryAttributes;c.position&&($.position=new n.GeometryAttribute({componentDatatype:i.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:_})),c.normal&&($.normal=new n.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:E})),c.tangent&&($.tangent=new n.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:w})),c.bitangent&&($.bitangent=new n.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:F})),c.st&&($.st=new n.GeometryAttribute({componentDatatype:i.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:T}));var ee=A/3;A-=6*(b+1);var te=s.IndexDatatype.createTypedArray(ee,A),ae=0;for(h=0;h<ee-2;h+=2){var ie=h,re=h+2,ne=t.Cartesian3.fromArray(_,3*ie,L),oe=t.Cartesian3.fromArray(_,3*re,k);if(!t.Cartesian3.equalsEpsilon(ne,oe,m.CesiumMath.EPSILON10)){var se=h+1,me=h+3;te[ae++]=se,te[ae++]=ie,te[ae++]=me,te[ae++]=me,te[ae++]=ie,te[ae++]=re}}return new n.Geometry({attributes:$,indices:te,primitiveType:n.PrimitiveType.TRIANGLES,boundingSphere:new a.BoundingSphere.fromVertices(_)})}},function(a,i){return e.defined(i)&&(a=T.unpack(a,i)),a._ellipsoid=t.Ellipsoid.clone(a._ellipsoid),T.createGeometry(a)}}));
