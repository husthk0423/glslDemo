{"version":3,"file":"GisTools.js","sources":["../../../../Source/WorkersES6/GisTools.js"],"sourcesContent":["/**\r\n * Created by matt on 2017/7/16.\r\n */\r\n//几个像素可以算是命中\r\nlet _dis = 5;\r\n\r\nclass GisTools {\r\n    static pointDistToLine(x, y, startx, starty, endx, endy) {\r\n        let se = (startx - endx) * (startx - endx) + (starty - endy) * (starty - endy);\r\n        let p = ((x - startx) * (endx - startx) + (y - starty) * (endy - starty));\r\n        let r = p / se;\r\n        let outx = startx + r * (endx - startx);\r\n        let outy = starty + r * (endy - starty);\r\n        let des = Math.sqrt((x - outx) * (x - outx) + (y - outy) * (y - outy));\r\n\r\n        //console.log(des);\r\n        return des;\r\n    }\r\n    static isPointOnSegment(px, py, p1x, p1y, p2x, p2y) {\r\n\r\n        if ((px - _dis > p1x && px + _dis > p2x) || (px + _dis < p1x && px - _dis < p2x)) {\r\n            return 0;\r\n        }\r\n        if ((py - _dis > p1y && py + _dis > p2y) || (py + _dis < p1y && py - _dis < p2y)) {\r\n            return 0;\r\n        }\r\n        let d = GisTools.pointDistToLine(px, py, p1x, p1y, p2x, p2y);\r\n        if (d < _dis) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    static pointInLine(px, py, polyline) {\r\n        let flag = 0;\r\n        let line = [];\r\n        if (Array.isArray(polyline[0])) {\r\n            line = polyline;\r\n        } else {\r\n            line.push(polyline);\r\n        }\r\n        for (var polyIndex = 0; polyIndex < line.length; polyIndex++) {\r\n            let subpoly = line[polyIndex];\r\n            let length = subpoly.length / 2;\r\n            // for (var i = 0, l = length, j = l - 1; i < l; j = i, i++) {\r\n\r\n            for (var i = 0; i < length - 1; i++) {\r\n                let j;\r\n                j = i + 1;\r\n                let sx = subpoly[2 * i],\r\n                    sy = subpoly[2 * i + 1],\r\n                    tx = subpoly[2 * j],\r\n                    ty = subpoly[2 * j + 1]\r\n                if (GisTools.isPointOnSegment(px, py, sx, sy, tx, ty) == 1) {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    static pointInPolygon(px, py, polygen) {\r\n        let flag = 0;\r\n        let poly = [];\r\n        if (Array.isArray(polygen[0])) {\r\n            poly = polygen;\r\n        } else {\r\n            poly.push(polygen);\r\n        }\r\n\r\n        for (var polyIndex = 0; polyIndex < poly.length; polyIndex++) {\r\n            let subpoly = poly[polyIndex];\r\n            let length = subpoly.length / 2;\r\n\r\n\r\n            for (var i = 0, l = length, j = l - 1; i < l; j = i, i++) {\r\n                let sx = subpoly[2 * i],\r\n                    sy = subpoly[2 * i + 1],\r\n                    tx = subpoly[2 * j],\r\n                    ty = subpoly[2 * j + 1]\r\n\r\n                // 点与多边形顶点重合\r\n                if ((sx === px && sy === py) || (tx === px && ty === py)) {\r\n                    return 1\r\n                }\r\n\r\n                // 判断线段两端点是否在射线两侧\r\n                if ((sy < py && ty >= py) || (sy >= py && ty < py)) {\r\n                    // 线段上与射线 Y 坐标相同的点的 X 坐标\r\n                    let x = sx + (py - sy) * (tx - sx) / (ty - sy)\r\n\r\n                    // 点在多边形的边上\r\n                    if (x === px) {\r\n                        return 1\r\n                    }\r\n                    if (x > px) {\r\n                        flag = !flag\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return flag ? 1 : 0;\r\n\r\n    }\r\n\r\n    static lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\r\n        var denominator,\r\n            a,\r\n            b,\r\n            numerator1,\r\n            numerator2,\r\n            onLine1 = false,\r\n            onLine2 = false,\r\n            res = [null, null];\r\n\r\n        denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\r\n        if (denominator === 0) {\r\n            if (res[0] !== null && res[1] !== null) {\r\n                return res;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        a = line1StartY - line2StartY;\r\n        b = line1StartX - line2StartX;\r\n        numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\r\n        numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\r\n        a = numerator1 / denominator;\r\n        b = numerator2 / denominator;\r\n\r\n        // if we cast these lines infinitely in both directions, they intersect here:\r\n        res[0] = line1StartX + (a * (line1EndX - line1StartX));\r\n        res[1] = line1StartY + (a * (line1EndY - line1StartY));\r\n\r\n\r\n        // if line2 is a segment and line1 is infinite, they intersect if:\r\n        if (b > 0 && b < 1) {\r\n            return res;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断两个poly的关系\r\n     * @param polyOut\r\n     * @param polyIn\r\n     * @returns {1,相交，2包涵，3，没关系}\r\n     */\r\n    static polyWith(polyOut, polyIn) {\r\n        let lengthOut = polyOut.length / 2;\r\n        let lengthIn = polyIn.length / 2;\r\n        let flag = false;\r\n        let bY;\r\n        let aX;\r\n        let aY;\r\n        let bX;\r\n        let dY;\r\n        let cX;\r\n        let cY;\r\n        let dX;\r\n        for (let i = 0; i < lengthOut; i++) {\r\n\r\n            if (i != lengthOut - 1) {\r\n                aX = polyOut[(i * 2)];\r\n                aY = polyOut[(i * 2 + 1)];\r\n                bX = polyOut[(i * 2 + 2)];\r\n                bY = polyOut[(i * 2 + 3)];\r\n            } else {\r\n                aX = polyOut[(i * 2)];\r\n                aY = polyOut[(i * 2 + 1)];\r\n                bX = polyOut[0];\r\n                bY = polyOut[1];\r\n            }\r\n            for (let j = 0; j < lengthIn; j++) {\r\n\r\n                if (j != lengthIn - 1) {\r\n                    cX = polyIn[(j * 2)];\r\n                    cY = polyIn[(j * 2 + 1)];\r\n                    dX = polyIn[(j * 2 + 2)];\r\n                    dY = polyIn[(j * 2 + 3)];\r\n                } else {\r\n                    cX = polyIn[(j * 2)];\r\n                    cY = polyIn[(j * 2 + 1)];\r\n                    dX = polyIn[0];\r\n                    dY = polyIn[1];\r\n                }\r\n\r\n                if (GisTools.lineIntersects(aX, aY, bX, bY, cX, cY, dX, dY) != false) {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        let firstX = polyIn[0];\r\n        let firstY = polyIn[1];\r\n        if (GisTools.pointInPolygon(firstX, firstY, polyOut)) {\r\n            return 2;\r\n        }\r\n        return 3;\r\n    }\r\n\r\n    /**\r\n     * 把bbox转成double Array\r\n     * @param left\r\n     * @param bottom\r\n     * @param right\r\n     * @param top\r\n     * @returns {Array}\r\n     */\r\n    static boxToPolyArr(left, bottom, right, top) {\r\n        let arr = [];\r\n        arr.push(left);\r\n        arr.push(bottom);\r\n\r\n        arr.push(left);\r\n        arr.push(top);\r\n\r\n        arr.push(right);\r\n        arr.push(top);\r\n\r\n        arr.push(right);\r\n        arr.push(bottom);\r\n\r\n        arr.push(left);\r\n        arr.push(bottom);\r\n\r\n        return arr;\r\n    }\r\n\r\n    static getExtensionPoint(p1, p2, d) {\r\n        let xab = p2[0] - p1[0];\r\n        let yab = p2[1] - p1[1];\r\n        let xd = p2[0];\r\n        let yd = p2[1];\r\n        if (xab == 0) {\r\n            if (yab > 0) {\r\n                yd = p2[1] + d;\r\n            } else {\r\n                yd = p2[1] - d;\r\n            }\r\n        } else {\r\n            let xbd = Math.sqrt((d * d) / ((yab / xab) * (yab / xab) + 1));\r\n            if (xab < 0) {\r\n                xbd = -xbd\r\n            }\r\n\r\n            xd = p2[0] + xbd;\r\n            yd = p2[1] + yab / xab * xbd;\r\n        }\r\n        return [xd, yd];\r\n    }\r\n\r\n\r\n    /**\r\n     * 线平行偏移\r\n     * @param coords\r\n     * @param distance\r\n     * @returns {Array}\r\n     */\r\n    static lineOffset(coords, distance) {\r\n        let segments = [];\r\n        let finalCoords = [];\r\n        coords.forEach(function(currentCoords, index) {\r\n            if (index !== coords.length - 1) {\r\n                let segment = GisTools.processSegment(currentCoords, coords[index + 1], distance);\r\n                segments.push(segment);\r\n                if (index > 0) {\r\n                    let seg2Coords = segments[index - 1];\r\n                    let intersects = GisTools.lineIntersects(segment[0][0], segment[0][1], segment[1][0], segment[1][1],\r\n                        seg2Coords[0][0], seg2Coords[0][1], seg2Coords[1][0], seg2Coords[1][1]);\r\n\r\n                    // Handling for line segments that aren't straight\r\n                    if (intersects !== false) {\r\n                        seg2Coords[1] = intersects;\r\n                        segment[0] = intersects;\r\n                    }\r\n\r\n                    finalCoords.push(seg2Coords[0]);\r\n                    if (index === coords.length - 2) {\r\n                        finalCoords.push(segment[0]);\r\n                        finalCoords.push(segment[1]);\r\n                    }\r\n                }\r\n                // Handling for lines that only have 1 segment\r\n                if (coords.length === 2) {\r\n                    finalCoords.push(segment[0]);\r\n                    finalCoords.push(segment[1]);\r\n                }\r\n            }\r\n        });\r\n        return finalCoords;\r\n    }\r\n\r\n    /**\r\n     * Process Segment\r\n     * Inspiration taken from http://stackoverflow.com/questions/2825412/draw-a-parallel-line\r\n     *\r\n     * @private\r\n     * @param {Array<number>} point1 Point coordinates\r\n     * @param {Array<number>} point2 Point coordinates\r\n     * @param {number} offset Offset\r\n     * @returns {Array<Array<number>>} offset points\r\n     */\r\n    static processSegment(pointAngle1, pointAngle2, offset) {\r\n        let point1 = pointAngle1[0];\r\n        let point2 = pointAngle2[0];\r\n        let L = Math.sqrt((point1[0] - point2[0]) * (point1[0] - point2[0]) + (point1[1] - point2[1]) * (point1[1] - point2[1]));\r\n\r\n        let out1x = point1[0] + offset * (point2[1] - point1[1]) / L;\r\n        let out2x = point2[0] + offset * (point2[1] - point1[1]) / L;\r\n        let out1y = point1[1] + offset * (point1[0] - point2[0]) / L;\r\n        let out2y = point2[1] + offset * (point1[0] - point2[0]) / L;\r\n        return [\r\n            [\r\n                [out1x, out1y], pointAngle1[1]\r\n            ],\r\n            [\r\n                [out2x, out2y], pointAngle2[1]\r\n            ]\r\n        ];\r\n    }\r\n\r\n    /**\r\n     *  判断box1是否在box2内部\r\n     * @param box1\r\n     * @param box2\r\n     */\r\n    static isInBox(box1, box2) {\r\n        if (box1[0] >= box2[0] && box1[1] >= box2[1] && box1[2] <= box2[2] && box1[3] <= box2[3]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static Utf8ArrayToStr(array) {\r\n        var out, i, len, c;\r\n        var char2, char3;\r\n\r\n        out = \"\";\r\n        len = array.length;\r\n        i = 0;\r\n        while (i < len) {\r\n            c = array[i++];\r\n            switch (c >> 4) {\r\n                case 0:\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5:\r\n                case 6:\r\n                case 7:\r\n                    // 0xxxxxxx\r\n                    out += String.fromCharCode(c);\r\n                    break;\r\n                case 12:\r\n                case 13:\r\n                    // 110x xxxx   10xx xxxx\r\n                    char2 = array[i++];\r\n                    out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\r\n                    break;\r\n                case 14:\r\n                    // 1110 xxxx  10xx xxxx  10xx xxxx\r\n                    char2 = array[i++];\r\n                    char3 = array[i++];\r\n                    out += String.fromCharCode(((c & 0x0F) << 12) |\r\n                        ((char2 & 0x3F) << 6) |\r\n                        ((char3 & 0x3F) << 0));\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n}\r\nexport default GisTools;"],"names":[],"mappings":"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"}