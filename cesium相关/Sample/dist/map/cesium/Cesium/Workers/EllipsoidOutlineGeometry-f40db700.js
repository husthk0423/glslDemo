define(["exports","./when-c2e8ef35","./Check-c4f3a3fc","./Math-d30358ed","./Cartesian2-f9492f23","./BoundingSphere-dcb1d5fc","./ComponentDatatype-5d3f6452","./GeometryAttribute-a5c051b9","./GeometryAttributes-57608efc","./IndexDatatype-e3260434","./GeometryOffsetAttribute-e6e9672c"],(function(i,e,t,a,n,r,o,s,m,u,f){"use strict";var d=new n.Cartesian3(1,1,1),l=Math.cos,c=Math.sin;function C(i){i=e.defaultValue(i,e.defaultValue.EMPTY_OBJECT);var t=e.defaultValue(i.radii,d),r=e.defaultValue(i.innerRadii,t),o=e.defaultValue(i.minimumClock,0),s=e.defaultValue(i.maximumClock,a.CesiumMath.TWO_PI),m=e.defaultValue(i.minimumCone,0),u=e.defaultValue(i.maximumCone,a.CesiumMath.PI),f=Math.round(e.defaultValue(i.stackPartitions,10)),l=Math.round(e.defaultValue(i.slicePartitions,8)),c=Math.round(e.defaultValue(i.subdivisions,128));this._radii=n.Cartesian3.clone(t),this._innerRadii=n.Cartesian3.clone(r),this._minimumClock=o,this._maximumClock=s,this._minimumCone=m,this._maximumCone=u,this._stackPartitions=f,this._slicePartitions=l,this._subdivisions=c,this._offsetAttribute=i.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}C.packedLength=2*n.Cartesian3.packedLength+8,C.pack=function(i,t,a){return a=e.defaultValue(a,0),n.Cartesian3.pack(i._radii,t,a),a+=n.Cartesian3.packedLength,n.Cartesian3.pack(i._innerRadii,t,a),a+=n.Cartesian3.packedLength,t[a++]=i._minimumClock,t[a++]=i._maximumClock,t[a++]=i._minimumCone,t[a++]=i._maximumCone,t[a++]=i._stackPartitions,t[a++]=i._slicePartitions,t[a++]=i._subdivisions,t[a]=e.defaultValue(i._offsetAttribute,-1),t};var _=new n.Cartesian3,h=new n.Cartesian3,p={radii:_,innerRadii:h,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};C.unpack=function(i,t,a){t=e.defaultValue(t,0);var r=n.Cartesian3.unpack(i,t,_);t+=n.Cartesian3.packedLength;var o=n.Cartesian3.unpack(i,t,h);t+=n.Cartesian3.packedLength;var s=i[t++],m=i[t++],u=i[t++],f=i[t++],d=i[t++],l=i[t++],c=i[t++],v=i[t];return e.defined(a)?(a._radii=n.Cartesian3.clone(r,a._radii),a._innerRadii=n.Cartesian3.clone(o,a._innerRadii),a._minimumClock=s,a._maximumClock=m,a._minimumCone=u,a._maximumCone=f,a._stackPartitions=d,a._slicePartitions=l,a._subdivisions=c,a._offsetAttribute=-1===v?void 0:v,a):(p.minimumClock=s,p.maximumClock=m,p.minimumCone=u,p.maximumCone=f,p.stackPartitions=d,p.slicePartitions=l,p.subdivisions=c,p.offsetAttribute=-1===v?void 0:v,new C(p))},C.createGeometry=function(i){var t=i._radii;if(!(t.x<=0||t.y<=0||t.z<=0)){var d=i._innerRadii;if(!(d.x<=0||d.y<=0||d.z<=0)){var C=i._minimumClock,_=i._maximumClock,h=i._minimumCone,p=i._maximumCone,v=i._subdivisions,y=n.Ellipsoid.fromCartesian3(t),k=i._slicePartitions+1,b=i._stackPartitions+1;(k=Math.round(k*Math.abs(_-C)/a.CesiumMath.TWO_PI))<2&&(k=2),(b=Math.round(b*Math.abs(p-h)/a.CesiumMath.PI))<2&&(b=2);var A=0,x=1,P=d.x!==t.x||d.y!==t.y||d.z!==t.z,w=!1,M=!1;P&&(x=2,h>0&&(w=!0,A+=k),p<Math.PI&&(M=!0,A+=k));var g,V,G,E,O=v*x*(b+k),D=new Float64Array(3*O),I=2*(O+A-(k+b)*x),z=u.IndexDatatype.createTypedArray(O,I),L=0,T=new Array(b),R=new Array(b);for(g=0;g<b;g++)E=h+g*(p-h)/(b-1),T[g]=c(E),R[g]=l(E);var N=new Array(v),B=new Array(v);for(g=0;g<v;g++)G=C+g*(_-C)/(v-1),N[g]=c(G),B[g]=l(G);for(g=0;g<b;g++)for(V=0;V<v;V++)D[L++]=t.x*T[g]*B[V],D[L++]=t.y*T[g]*N[V],D[L++]=t.z*R[g];if(P)for(g=0;g<b;g++)for(V=0;V<v;V++)D[L++]=d.x*T[g]*B[V],D[L++]=d.y*T[g]*N[V],D[L++]=d.z*R[g];for(T.length=v,R.length=v,g=0;g<v;g++)E=h+g*(p-h)/(v-1),T[g]=c(E),R[g]=l(E);for(N.length=k,B.length=k,g=0;g<k;g++)G=C+g*(_-C)/(k-1),N[g]=c(G),B[g]=l(G);for(g=0;g<v;g++)for(V=0;V<k;V++)D[L++]=t.x*T[g]*B[V],D[L++]=t.y*T[g]*N[V],D[L++]=t.z*R[g];if(P)for(g=0;g<v;g++)for(V=0;V<k;V++)D[L++]=d.x*T[g]*B[V],D[L++]=d.y*T[g]*N[V],D[L++]=d.z*R[g];for(L=0,g=0;g<b*x;g++){var S=g*v;for(V=0;V<v-1;V++)z[L++]=S+V,z[L++]=S+V+1}var U=b*v*x;for(g=0;g<k;g++)for(V=0;V<v-1;V++)z[L++]=U+g+V*k,z[L++]=U+g+(V+1)*k;if(P)for(U=b*v*x+k*v,g=0;g<k;g++)for(V=0;V<v-1;V++)z[L++]=U+g+V*k,z[L++]=U+g+(V+1)*k;if(P){var F=b*v*x,W=F+v*k;if(w)for(g=0;g<k;g++)z[L++]=F+g,z[L++]=W+g;if(M)for(F+=v*k-k,W+=v*k-k,g=0;g<k;g++)z[L++]=F+g,z[L++]=W+g}var Y=new m.GeometryAttributes({position:new s.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:D})});if(e.defined(i._offsetAttribute)){var J=D.length,j=new Uint8Array(J/3),q=i._offsetAttribute===f.GeometryOffsetAttribute.NONE?0:1;f.arrayFill(j,q),Y.applyOffset=new s.GeometryAttribute({componentDatatype:o.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:j})}return new s.Geometry({attributes:Y,indices:z,primitiveType:s.PrimitiveType.LINES,boundingSphere:r.BoundingSphere.fromEllipsoid(y),offsetAttribute:i._offsetAttribute})}}},i.EllipsoidOutlineGeometry=C}));
