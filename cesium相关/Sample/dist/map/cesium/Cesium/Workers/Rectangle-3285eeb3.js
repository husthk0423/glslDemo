define(["exports","./when-c2e8ef35","./Check-c4f3a3fc","./Math-d30358ed","./Cartesian2-f9492f23"],(function(t,e,a,n,u){"use strict";function i(t,a,n,u){this.west=e.defaultValue(t,0),this.south=e.defaultValue(a,0),this.east=e.defaultValue(n,0),this.north=e.defaultValue(u,0)}Object.defineProperties(i.prototype,{width:{get:function(){return i.computeWidth(this)}},height:{get:function(){return i.computeHeight(this)}}}),i.packedLength=4,i.pack=function(t,a,n){return n=e.defaultValue(n,0),a[n++]=t.west,a[n++]=t.south,a[n++]=t.east,a[n]=t.north,a},i.unpack=function(t,a,n){return a=e.defaultValue(a,0),e.defined(n)||(n=new i),n.west=t[a++],n.south=t[a++],n.east=t[a++],n.north=t[a],n},i.computeWidth=function(t){var e=t.east,a=t.west;return e<a&&(e+=n.CesiumMath.TWO_PI),e-a},i.computeHeight=function(t){return t.north-t.south},i.fromDegrees=function(t,a,u,s,o){return t=n.CesiumMath.toRadians(e.defaultValue(t,0)),a=n.CesiumMath.toRadians(e.defaultValue(a,0)),u=n.CesiumMath.toRadians(e.defaultValue(u,0)),s=n.CesiumMath.toRadians(e.defaultValue(s,0)),e.defined(o)?(o.west=t,o.south=a,o.east=u,o.north=s,o):new i(t,a,u,s)},i.fromRadians=function(t,a,n,u,s){return e.defined(s)?(s.west=e.defaultValue(t,0),s.south=e.defaultValue(a,0),s.east=e.defaultValue(n,0),s.north=e.defaultValue(u,0),s):new i(t,a,n,u)},i.fromCartographicArray=function(t,a){for(var u=Number.MAX_VALUE,s=-Number.MAX_VALUE,o=Number.MAX_VALUE,h=-Number.MAX_VALUE,r=Number.MAX_VALUE,d=-Number.MAX_VALUE,l=0,m=t.length;l<m;l++){var f=t[l];u=Math.min(u,f.longitude),s=Math.max(s,f.longitude),r=Math.min(r,f.latitude),d=Math.max(d,f.latitude);var M=f.longitude>=0?f.longitude:f.longitude+n.CesiumMath.TWO_PI;o=Math.min(o,M),h=Math.max(h,M)}return s-u>h-o&&(u=o,(s=h)>n.CesiumMath.PI&&(s-=n.CesiumMath.TWO_PI),u>n.CesiumMath.PI&&(u-=n.CesiumMath.TWO_PI)),e.defined(a)?(a.west=u,a.south=r,a.east=s,a.north=d,a):new i(u,r,s,d)},i.fromCartesianArray=function(t,a,s){a=e.defaultValue(a,u.Ellipsoid.WGS84);for(var o=Number.MAX_VALUE,h=-Number.MAX_VALUE,r=Number.MAX_VALUE,d=-Number.MAX_VALUE,l=Number.MAX_VALUE,m=-Number.MAX_VALUE,f=0,M=t.length;f<M;f++){var c=a.cartesianToCartographic(t[f]);o=Math.min(o,c.longitude),h=Math.max(h,c.longitude),l=Math.min(l,c.latitude),m=Math.max(m,c.latitude);var g=c.longitude>=0?c.longitude:c.longitude+n.CesiumMath.TWO_PI;r=Math.min(r,g),d=Math.max(d,g)}return h-o>d-r&&(o=r,(h=d)>n.CesiumMath.PI&&(h-=n.CesiumMath.TWO_PI),o>n.CesiumMath.PI&&(o-=n.CesiumMath.TWO_PI)),e.defined(s)?(s.west=o,s.south=l,s.east=h,s.north=m,s):new i(o,l,h,m)},i.clone=function(t,a){if(e.defined(t))return e.defined(a)?(a.west=t.west,a.south=t.south,a.east=t.east,a.north=t.north,a):new i(t.west,t.south,t.east,t.north)},i.equalsEpsilon=function(t,a,n){return t===a||e.defined(t)&&e.defined(a)&&Math.abs(t.west-a.west)<=n&&Math.abs(t.south-a.south)<=n&&Math.abs(t.east-a.east)<=n&&Math.abs(t.north-a.north)<=n},i.prototype.clone=function(t){return i.clone(this,t)},i.prototype.equals=function(t){return i.equals(this,t)},i.equals=function(t,a){return t===a||e.defined(t)&&e.defined(a)&&t.west===a.west&&t.south===a.south&&t.east===a.east&&t.north===a.north},i.prototype.equalsEpsilon=function(t,e){return i.equalsEpsilon(this,t,e)},i.validate=function(t){},i.southwest=function(t,a){return e.defined(a)?(a.longitude=t.west,a.latitude=t.south,a.height=0,a):new u.Cartographic(t.west,t.south)},i.northwest=function(t,a){return e.defined(a)?(a.longitude=t.west,a.latitude=t.north,a.height=0,a):new u.Cartographic(t.west,t.north)},i.northeast=function(t,a){return e.defined(a)?(a.longitude=t.east,a.latitude=t.north,a.height=0,a):new u.Cartographic(t.east,t.north)},i.southeast=function(t,a){return e.defined(a)?(a.longitude=t.east,a.latitude=t.south,a.height=0,a):new u.Cartographic(t.east,t.south)},i.center=function(t,a){var i=t.east,s=t.west;i<s&&(i+=n.CesiumMath.TWO_PI);var o=n.CesiumMath.negativePiToPi(.5*(s+i)),h=.5*(t.south+t.north);return e.defined(a)?(a.longitude=o,a.latitude=h,a.height=0,a):new u.Cartographic(o,h)},i.intersection=function(t,a,u){var s=t.east,o=t.west,h=a.east,r=a.west;s<o&&h>0?s+=n.CesiumMath.TWO_PI:h<r&&s>0&&(h+=n.CesiumMath.TWO_PI),s<o&&r<0?r+=n.CesiumMath.TWO_PI:h<r&&o<0&&(o+=n.CesiumMath.TWO_PI);var d=n.CesiumMath.negativePiToPi(Math.max(o,r)),l=n.CesiumMath.negativePiToPi(Math.min(s,h));if(!((t.west<t.east||a.west<a.east)&&l<=d)){var m=Math.max(t.south,a.south),f=Math.min(t.north,a.north);if(!(m>=f))return e.defined(u)?(u.west=d,u.south=m,u.east=l,u.north=f,u):new i(d,m,l,f)}},i.simpleIntersection=function(t,a,n){var u=Math.max(t.west,a.west),s=Math.max(t.south,a.south),o=Math.min(t.east,a.east),h=Math.min(t.north,a.north);if(!(s>=h||u>=o))return e.defined(n)?(n.west=u,n.south=s,n.east=o,n.north=h,n):new i(u,s,o,h)},i.union=function(t,a,u){e.defined(u)||(u=new i);var s=t.east,o=t.west,h=a.east,r=a.west;s<o&&h>0?s+=n.CesiumMath.TWO_PI:h<r&&s>0&&(h+=n.CesiumMath.TWO_PI),s<o&&r<0?r+=n.CesiumMath.TWO_PI:h<r&&o<0&&(o+=n.CesiumMath.TWO_PI);var d=n.CesiumMath.convertLongitudeRange(Math.min(o,r)),l=n.CesiumMath.convertLongitudeRange(Math.max(s,h));return u.west=d,u.south=Math.min(t.south,a.south),u.east=l,u.north=Math.max(t.north,a.north),u},i.expand=function(t,a,n){return e.defined(n)||(n=new i),n.west=Math.min(t.west,a.longitude),n.south=Math.min(t.south,a.latitude),n.east=Math.max(t.east,a.longitude),n.north=Math.max(t.north,a.latitude),n},i.contains=function(t,e){var a=e.longitude,u=e.latitude,i=t.west,s=t.east;return s<i&&(s+=n.CesiumMath.TWO_PI,a<0&&(a+=n.CesiumMath.TWO_PI)),(a>i||n.CesiumMath.equalsEpsilon(a,i,n.CesiumMath.EPSILON14))&&(a<s||n.CesiumMath.equalsEpsilon(a,s,n.CesiumMath.EPSILON14))&&u>=t.south&&u<=t.north};var s=new u.Cartographic;i.subsample=function(t,a,o,h){a=e.defaultValue(a,u.Ellipsoid.WGS84),o=e.defaultValue(o,0),e.defined(h)||(h=[]);var r=0,d=t.north,l=t.south,m=t.east,f=t.west,M=s;M.height=o,M.longitude=f,M.latitude=d,h[r]=a.cartographicToCartesian(M,h[r]),r++,M.longitude=m,h[r]=a.cartographicToCartesian(M,h[r]),r++,M.latitude=l,h[r]=a.cartographicToCartesian(M,h[r]),r++,M.longitude=f,h[r]=a.cartographicToCartesian(M,h[r]),r++,M.latitude=d<0?d:l>0?l:0;for(var c=1;c<8;++c)M.longitude=-Math.PI+c*n.CesiumMath.PI_OVER_TWO,i.contains(t,M)&&(h[r]=a.cartographicToCartesian(M,h[r]),r++);return 0===M.latitude&&(M.longitude=f,h[r]=a.cartographicToCartesian(M,h[r]),r++,M.longitude=m,h[r]=a.cartographicToCartesian(M,h[r]),r++),h.length=r,h},i.MAX_VALUE=Object.freeze(new i(-Math.PI,-n.CesiumMath.PI_OVER_TWO,Math.PI,n.CesiumMath.PI_OVER_TWO)),t.Rectangle=i}));
