define(["./when-c2e8ef35","./Check-c4f3a3fc","./Math-d30358ed","./Cartesian2-f9492f23","./BoundingSphere-dcb1d5fc","./Transforms-8b7e0d39","./RuntimeError-6122571f","./Rectangle-3285eeb3","./WebGLConstants-4ae0db90","./ComponentDatatype-5d3f6452","./GeometryAttribute-a5c051b9","./GeometryAttributes-57608efc","./IndexDatatype-e3260434","./IntersectionTests-525ff5aa","./Plane-dbdf17bf","./VertexFormat-ad523db1","./EllipsoidTangentPlane-98a8a37e","./EllipsoidRhumbLine-01c8204c","./PolygonPipeline-db004fe0","./EllipsoidGeodesic-c0017f17","./PolylinePipeline-b34abe5b","./WallGeometryLibrary-847d7530"],(function(e,t,a,i,n,r,o,s,m,l,d,p,u,c,f,y,g,h,v,C,b,A){"use strict";var x=new i.Cartesian3,_=new i.Cartesian3,E=new i.Cartesian3,w=new i.Cartesian3,F=new i.Cartesian3,L=new i.Cartesian3,k=new i.Cartesian3,G=new i.Cartesian3;function P(t){var n=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions,r=t.maximumHeights,o=t.minimumHeights,s=e.defaultValue(t.vertexFormat,y.VertexFormat.DEFAULT),m=e.defaultValue(t.granularity,a.CesiumMath.RADIANS_PER_DEGREE),l=e.defaultValue(t.ellipsoid,i.Ellipsoid.WGS84);this._positions=n,this._minimumHeights=o,this._maximumHeights=r,this._vertexFormat=y.VertexFormat.clone(s),this._granularity=m,this._ellipsoid=i.Ellipsoid.clone(l),this._workerName="createWallGeometry";var d=1+n.length*i.Cartesian3.packedLength+2;e.defined(o)&&(d+=o.length),e.defined(r)&&(d+=r.length),this.packedLength=d+i.Ellipsoid.packedLength+y.VertexFormat.packedLength+1}P.pack=function(t,a,n){var r;n=e.defaultValue(n,0);var o=t._positions,s=o.length;for(a[n++]=s,r=0;r<s;++r,n+=i.Cartesian3.packedLength)i.Cartesian3.pack(o[r],a,n);var m=t._minimumHeights;if(s=e.defined(m)?m.length:0,a[n++]=s,e.defined(m))for(r=0;r<s;++r)a[n++]=m[r];var l=t._maximumHeights;if(s=e.defined(l)?l.length:0,a[n++]=s,e.defined(l))for(r=0;r<s;++r)a[n++]=l[r];return i.Ellipsoid.pack(t._ellipsoid,a,n),n+=i.Ellipsoid.packedLength,y.VertexFormat.pack(t._vertexFormat,a,n),a[n+=y.VertexFormat.packedLength]=t._granularity,a};var H=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE),V=new y.VertexFormat,T={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:H,vertexFormat:V,granularity:void 0};return P.unpack=function(t,a,n){var r;a=e.defaultValue(a,0);var o,s,m=t[a++],l=new Array(m);for(r=0;r<m;++r,a+=i.Cartesian3.packedLength)l[r]=i.Cartesian3.unpack(t,a);if((m=t[a++])>0)for(o=new Array(m),r=0;r<m;++r)o[r]=t[a++];if((m=t[a++])>0)for(s=new Array(m),r=0;r<m;++r)s[r]=t[a++];var d=i.Ellipsoid.unpack(t,a,H);a+=i.Ellipsoid.packedLength;var p=y.VertexFormat.unpack(t,a,V),u=t[a+=y.VertexFormat.packedLength];return e.defined(n)?(n._positions=l,n._minimumHeights=o,n._maximumHeights=s,n._ellipsoid=i.Ellipsoid.clone(d,n._ellipsoid),n._vertexFormat=y.VertexFormat.clone(p,n._vertexFormat),n._granularity=u,n):(T.positions=l,T.minimumHeights=o,T.maximumHeights=s,T.granularity=u,new P(T))},P.fromConstantHeights=function(t){var a,i,n=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions,r=t.minimumHeight,o=t.maximumHeight,s=e.defined(r),m=e.defined(o);if(s||m){var l=n.length;a=s?new Array(l):void 0,i=m?new Array(l):void 0;for(var d=0;d<l;++d)s&&(a[d]=r),m&&(i[d]=o)}return new P({positions:n,maximumHeights:i,minimumHeights:a,ellipsoid:t.ellipsoid,vertexFormat:t.vertexFormat})},P.createGeometry=function(t){var r=t._positions,o=t._minimumHeights,s=t._maximumHeights,m=t._vertexFormat,c=t._granularity,f=t._ellipsoid,y=A.WallGeometryLibrary.computePositions(f,r,s,o,c,!0);if(e.defined(y)){var g,h=y.bottomPositions,v=y.topPositions,C=y.numCorners,b=v.length,P=2*b,H=m.position?new Float64Array(P):void 0,V=m.normal?new Float32Array(P):void 0,T=m.tangent?new Float32Array(P):void 0,D=m.bitangent?new Float32Array(P):void 0,z=m.st?new Float32Array(P/3*2):void 0,S=0,O=0,R=0,I=0,M=0,N=G,B=k,W=L,U=!0,q=0,J=1/((b/=3)-r.length+1);for(g=0;g<b;++g){var Y=3*g,Z=i.Cartesian3.fromArray(v,Y,x),j=i.Cartesian3.fromArray(h,Y,_);if(m.position&&(H[S++]=j.x,H[S++]=j.y,H[S++]=j.z,H[S++]=Z.x,H[S++]=Z.y,H[S++]=Z.z),m.st&&(z[M++]=q,z[M++]=0,z[M++]=q,z[M++]=1),m.normal||m.tangent||m.bitangent){var K,Q=i.Cartesian3.clone(i.Cartesian3.ZERO,F),X=f.scaleToGeodeticSurface(i.Cartesian3.fromArray(v,Y,_),_);if(g+1<b&&(K=f.scaleToGeodeticSurface(i.Cartesian3.fromArray(v,Y+3,E),E),Q=i.Cartesian3.fromArray(v,Y+3,F)),U){var $=i.Cartesian3.subtract(Q,Z,w),ee=i.Cartesian3.subtract(X,Z,x);N=i.Cartesian3.normalize(i.Cartesian3.cross(ee,$,N),N),U=!1}i.Cartesian3.equalsEpsilon(K,X,a.CesiumMath.EPSILON10)?U=!0:(q+=J,m.tangent&&(B=i.Cartesian3.normalize(i.Cartesian3.subtract(K,X,B),B)),m.bitangent&&(W=i.Cartesian3.normalize(i.Cartesian3.cross(N,B,W),W))),m.normal&&(V[O++]=N.x,V[O++]=N.y,V[O++]=N.z,V[O++]=N.x,V[O++]=N.y,V[O++]=N.z),m.tangent&&(T[I++]=B.x,T[I++]=B.y,T[I++]=B.z,T[I++]=B.x,T[I++]=B.y,T[I++]=B.z),m.bitangent&&(D[R++]=W.x,D[R++]=W.y,D[R++]=W.z,D[R++]=W.x,D[R++]=W.y,D[R++]=W.z)}}var te=new p.GeometryAttributes;m.position&&(te.position=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:H})),m.normal&&(te.normal=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:V})),m.tangent&&(te.tangent=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:T})),m.bitangent&&(te.bitangent=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:D})),m.st&&(te.st=new d.GeometryAttribute({componentDatatype:l.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:z}));var ae=P/3;P-=6*(C+1);var ie=u.IndexDatatype.createTypedArray(ae,P),ne=0;for(g=0;g<ae-2;g+=2){var re=g,oe=g+2,se=i.Cartesian3.fromArray(H,3*re,x),me=i.Cartesian3.fromArray(H,3*oe,_);if(!i.Cartesian3.equalsEpsilon(se,me,a.CesiumMath.EPSILON10)){var le=g+1,de=g+3;ie[ne++]=le,ie[ne++]=re,ie[ne++]=de,ie[ne++]=de,ie[ne++]=re,ie[ne++]=oe}}return new d.Geometry({attributes:te,indices:ie,primitiveType:d.PrimitiveType.TRIANGLES,boundingSphere:new n.BoundingSphere.fromVertices(H)})}},function(t,a){return e.defined(a)&&(t=P.unpack(t,a)),t._ellipsoid=i.Ellipsoid.clone(t._ellipsoid),P.createGeometry(t)}}));
